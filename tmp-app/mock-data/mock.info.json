{
    "named_endpoints": {},
    "unnamed_endpoints": {
        "0": {
            "parameters": [],
            "returns": [
                {
                    "label": "Stable Diffusion checkpoint",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "1": {
            "parameters": [
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "example_input": [
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png"
                    ],
                    "serializer": "GallerySerializable"
                }
            ],
            "returns": [
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                }
            ]
        },
        "2": {
            "parameters": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Sampling steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Restore faces",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Sampling steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Restore faces",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                }
            ]
        },
        "4": {
            "parameters": [
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "example_input": [
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png"
                    ],
                    "serializer": "GallerySerializable"
                }
            ],
            "returns": [
                {
                    "label": "Image for inpainting with mask",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                }
            ]
        },
        "5": {
            "parameters": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Sampling steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Restore faces",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Sampling steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Restore faces",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                }
            ]
        },
        "7": {
            "parameters": [
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "example_input": [
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png"
                    ],
                    "serializer": "GallerySerializable"
                }
            ],
            "returns": [
                {
                    "label": "Source",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                }
            ]
        },
        "12": {
            "parameters": [
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "example_input": [
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png"
                    ],
                    "serializer": "GallerySerializable"
                }
            ],
            "returns": [
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                }
            ]
        },
        "14": {
            "parameters": [
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "example_input": [
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png"
                    ],
                    "serializer": "GallerySerializable"
                }
            ],
            "returns": [
                {
                    "label": "Image for inpainting with mask",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                }
            ]
        },
        "16": {
            "parameters": [
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "example_input": [
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png"
                    ],
                    "serializer": "GallerySerializable"
                }
            ],
            "returns": [
                {
                    "label": "Source",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                }
            ]
        },
        "21": {
            "parameters": [
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "example_input": [
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png"
                    ],
                    "serializer": "GallerySerializable"
                }
            ],
            "returns": [
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                }
            ]
        },
        "23": {
            "parameters": [
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "example_input": [
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png"
                    ],
                    "serializer": "GallerySerializable"
                }
            ],
            "returns": [
                {
                    "label": "Image for inpainting with mask",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                }
            ]
        },
        "25": {
            "parameters": [
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "example_input": [
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png"
                    ],
                    "serializer": "GallerySerializable"
                }
            ],
            "returns": [
                {
                    "label": "Source",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                }
            ]
        },
        "30": {
            "parameters": [
                {
                    "label": "Source",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                }
            ]
        },
        "34": {
            "parameters": [
                {
                    "label": "Source",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Image for inpainting with mask",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                }
            ]
        },
        "38": {
            "parameters": [
                {
                    "label": "Source",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Source",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                }
            ]
        },
        "40": {
            "parameters": [],
            "returns": []
        },
        "41": {
            "parameters": [],
            "returns": []
        },
        "42": {
            "parameters": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "43": {
            "parameters": [],
            "returns": [
                {
                    "label": "Styles",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "44": {
            "parameters": [],
            "returns": []
        },
        "45": {
            "parameters": [],
            "returns": []
        },
        "46": {
            "parameters": [],
            "returns": []
        },
        "47": {
            "parameters": [],
            "returns": []
        },
        "49": {
            "parameters": [],
            "returns": [
                {
                    "label": "value_39",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_41",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_43",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_45",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "50": {
            "parameters": [],
            "returns": [
                {
                    "label": "value_39",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_41",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_43",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_45",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "54": {
            "parameters": [
                {
                    "label": "Override settings",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Override settings",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "55": {
            "parameters": [],
            "returns": []
        },
        "56": {
            "parameters": [
                {
                    "label": "Upload prompt inputs",
                    "type": {
                        "oneOf": [
                            {
                                "type": "string",
                                "description": "filepath or URL to file"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "name of file"
                                    },
                                    "data": {
                                        "type": "string",
                                        "description": "base64 representation of file"
                                    },
                                    "size": {
                                        "type": "integer",
                                        "description": "size of image in bytes"
                                    },
                                    "is_file": {
                                        "type": "boolean",
                                        "description": "true if the file has been uploaded to the server"
                                    },
                                    "orig_name": {
                                        "type": "string",
                                        "description": "original name of the file"
                                    }
                                },
                                "required": [
                                    "name",
                                    "data"
                                ]
                            }
                        ]
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to file"
                    },
                    "component": "File",
                    "example_input": "https://github.com/gradio-app/gradio/raw/main/test/test_files/sample_file.pdf",
                    "serializer": "FileSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Upload prompt inputs",
                    "type": {
                        "oneOf": [
                            {
                                "type": "string",
                                "description": "filepath or URL to file"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "name of file"
                                    },
                                    "data": {
                                        "type": "string",
                                        "description": "base64 representation of file"
                                    },
                                    "size": {
                                        "type": "integer",
                                        "description": "size of image in bytes"
                                    },
                                    "is_file": {
                                        "type": "boolean",
                                        "description": "true if the file has been uploaded to the server"
                                    },
                                    "orig_name": {
                                        "type": "string",
                                        "description": "original name of the file"
                                    }
                                },
                                "required": [
                                    "name",
                                    "data"
                                ]
                            }
                        ]
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to file"
                    },
                    "component": "File",
                    "serializer": "FileSerializable"
                },
                {
                    "label": "List of prompt inputs",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "List of prompt inputs",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "57": {
            "parameters": [
                {
                    "label": "List of prompt inputs",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "List of prompt inputs",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "58": {
            "parameters": [
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "59": {
            "parameters": [
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "60": {
            "parameters": [
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "61": {
            "parameters": [
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "X values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "62": {
            "parameters": [
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Y values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "63": {
            "parameters": [
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Z values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "64": {
            "parameters": [
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_150",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Button",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "65": {
            "parameters": [
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_156",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Button",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "66": {
            "parameters": [
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_162",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Button",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "68": {
            "parameters": [
                {
                    "label": "Hires. fix",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Upscale by",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize width to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize height to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Upscaled resolution",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "70": {
            "parameters": [
                {
                    "label": "Hires. fix",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Upscale by",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize width to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize height to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Upscaled resolution",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "72": {
            "parameters": [
                {
                    "label": "Hires. fix",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Upscale by",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize width to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize height to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Upscaled resolution",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "74": {
            "parameters": [
                {
                    "label": "Hires. fix",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Upscale by",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize width to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize height to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Upscaled resolution",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "76": {
            "parameters": [
                {
                    "label": "Hires. fix",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Upscale by",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize width to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize height to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Upscaled resolution",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "78": {
            "parameters": [
                {
                    "label": "Hires. fix",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Upscale by",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize width to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize height to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Upscaled resolution",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "80": {
            "parameters": [],
            "returns": []
        },
        "81": {
            "parameters": [
                {
                    "label": "parameter_196",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "parameter_194",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "parameter_194",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_194",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_194",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "82": {
            "parameters": [
                {
                    "label": "parameter_196",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "example_input": [
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png"
                    ],
                    "serializer": "GallerySerializable"
                },
                {
                    "label": "parameter_194",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "parameter_194",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_192",
                    "type": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "description": "filepath or URL to file"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of filepath(s) or URL(s) to files"
                    },
                    "component": "File",
                    "serializer": "FileSerializable"
                },
                {
                    "label": "value_195",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "83": {
            "parameters": [
                {
                    "label": "parameter_196",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "example_input": [
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png"
                    ],
                    "serializer": "GallerySerializable"
                },
                {
                    "label": "parameter_194",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "parameter_194",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_192",
                    "type": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "description": "filepath or URL to file"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of filepath(s) or URL(s) to files"
                    },
                    "component": "File",
                    "serializer": "FileSerializable"
                },
                {
                    "label": "value_195",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "84": {
            "parameters": [
                {
                    "label": "parameter_196",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "value_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "serializer": "JSONSerializable"
                }
            ]
        },
        "85": {
            "parameters": [
                {
                    "label": "parameter_196",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Variation seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "value_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "serializer": "JSONSerializable"
                }
            ]
        },
        "86": {
            "parameters": [
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Styles",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Sampling steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Sampling method",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM', 'PLMS', 'UniPC']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM', 'PLMS', 'UniPC']"
                    },
                    "component": "Dropdown",
                    "example_input": "Euler a",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Restore faces",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Tiling",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Batch count",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 100"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 100"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Batch size",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 8"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 8"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "CFG Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Variation seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Variation strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize seed from height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize seed from width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Extra",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Hires. fix",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Denoising strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Upscale by",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Upscaler",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Latent', 'Latent (antialiased)', 'Latent (bicubic)', 'Latent (bicubic antialiased)', 'Latent (nearest)', 'Latent (nearest-exact)', 'None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Latent', 'Latent (antialiased)', 'Latent (bicubic)', 'Latent (bicubic antialiased)', 'Latent (nearest)', 'Latent (nearest-exact)', 'None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "component": "Dropdown",
                    "example_input": "Latent",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Hires steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 150"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize width to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize height to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Hires sampling method",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Use same sampler', 'Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Use same sampler', 'Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM']"
                    },
                    "component": "Dropdown",
                    "example_input": "Use same sampler",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Hires prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Hires negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Override settings",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Script",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'Prompt matrix', 'Prompts from file or textbox', 'X/Y/Z plot']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'Prompt matrix', 'Prompts from file or textbox', 'X/Y/Z plot']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Put variable parts at start of prompt",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use different seed for each picture",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Select prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "positive",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Select joining char",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "comma",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Grid margins (px)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 500"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 500"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Iterate seed every line",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use same random seed for all lines",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "List of prompt inputs",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Draw legend",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Include Sub Images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Include Sub Grids",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Keep -1 for seeds",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Grid margins (px)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 500"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 500"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "serializer": "GallerySerializable"
                },
                {
                    "label": "value_196",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_194",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_195",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "87": {
            "parameters": [
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Styles",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Sampling steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Sampling method",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM', 'PLMS', 'UniPC']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM', 'PLMS', 'UniPC']"
                    },
                    "component": "Dropdown",
                    "example_input": "Euler a",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Restore faces",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Tiling",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Batch count",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 100"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 100"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Batch size",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 8"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 8"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "CFG Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Variation seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Variation strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize seed from height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize seed from width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Extra",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Hires. fix",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Denoising strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Upscale by",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Upscaler",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Latent', 'Latent (antialiased)', 'Latent (bicubic)', 'Latent (bicubic antialiased)', 'Latent (nearest)', 'Latent (nearest-exact)', 'None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Latent', 'Latent (antialiased)', 'Latent (bicubic)', 'Latent (bicubic antialiased)', 'Latent (nearest)', 'Latent (nearest-exact)', 'None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "component": "Dropdown",
                    "example_input": "Latent",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Hires steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 150"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize width to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize height to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Hires sampling method",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Use same sampler', 'Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Use same sampler', 'Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM']"
                    },
                    "component": "Dropdown",
                    "example_input": "Use same sampler",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Hires prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Hires negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Override settings",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Script",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'Prompt matrix', 'Prompts from file or textbox', 'X/Y/Z plot']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'Prompt matrix', 'Prompts from file or textbox', 'X/Y/Z plot']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Put variable parts at start of prompt",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use different seed for each picture",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Select prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "positive",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Select joining char",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "comma",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Grid margins (px)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 500"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 500"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Iterate seed every line",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use same random seed for all lines",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "List of prompt inputs",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Draw legend",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Include Sub Images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Include Sub Grids",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Keep -1 for seeds",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Grid margins (px)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 500"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 500"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "serializer": "GallerySerializable"
                },
                {
                    "label": "value_196",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_194",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_195",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "89": {
            "parameters": [
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "serializer": "GallerySerializable"
                },
                {
                    "label": "value_196",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_194",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_195",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "90": {
            "parameters": [
                {
                    "label": "",
                    "type": {
                        "oneOf": [
                            {
                                "type": "string",
                                "description": "filepath or URL to file"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "name of file"
                                    },
                                    "data": {
                                        "type": "string",
                                        "description": "base64 representation of file"
                                    },
                                    "size": {
                                        "type": "integer",
                                        "description": "size of image in bytes"
                                    },
                                    "is_file": {
                                        "type": "boolean",
                                        "description": "true if the file has been uploaded to the server"
                                    },
                                    "orig_name": {
                                        "type": "string",
                                        "description": "original name of the file"
                                    }
                                },
                                "required": [
                                    "name",
                                    "data"
                                ]
                            }
                        ]
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to file"
                    },
                    "component": "File",
                    "example_input": "https://github.com/gradio-app/gradio/raw/main/test/test_files/sample_file.pdf",
                    "serializer": "FileSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "",
                    "type": {
                        "oneOf": [
                            {
                                "type": "string",
                                "description": "filepath or URL to file"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "name of file"
                                    },
                                    "data": {
                                        "type": "string",
                                        "description": "base64 representation of file"
                                    },
                                    "size": {
                                        "type": "integer",
                                        "description": "size of image in bytes"
                                    },
                                    "is_file": {
                                        "type": "boolean",
                                        "description": "true if the file has been uploaded to the server"
                                    },
                                    "orig_name": {
                                        "type": "string",
                                        "description": "original name of the file"
                                    }
                                },
                                "required": [
                                    "name",
                                    "data"
                                ]
                            }
                        ]
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to file"
                    },
                    "component": "File",
                    "serializer": "FileSerializable"
                }
            ]
        },
        "92": {
            "parameters": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Sampling steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_25",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "93": {
            "parameters": [
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Sampling steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_27",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "94": {
            "parameters": [
                {
                    "label": "parameter_51",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "example_input": [
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png"
                    ],
                    "serializer": "GallerySerializable"
                },
                {
                    "label": "parameter_51",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_39",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_41",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_43",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_45",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "95": {
            "parameters": [],
            "returns": []
        },
        "96": {
            "parameters": [],
            "returns": []
        },
        "97": {
            "parameters": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "98": {
            "parameters": [],
            "returns": [
                {
                    "label": "Styles",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "99": {
            "parameters": [],
            "returns": []
        },
        "100": {
            "parameters": [],
            "returns": []
        },
        "101": {
            "parameters": [],
            "returns": []
        },
        "102": {
            "parameters": [],
            "returns": []
        },
        "104": {
            "parameters": [],
            "returns": [
                {
                    "label": "value_241",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_243",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_245",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_247",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "105": {
            "parameters": [],
            "returns": [
                {
                    "label": "value_241",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_243",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_245",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_247",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "106": {
            "parameters": [
                {
                    "label": "Color sketch inpainting",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": []
        },
        "107": {
            "parameters": [],
            "returns": []
        },
        "108": {
            "parameters": [],
            "returns": []
        },
        "109": {
            "parameters": [],
            "returns": []
        },
        "110": {
            "parameters": [],
            "returns": []
        },
        "111": {
            "parameters": [],
            "returns": []
        },
        "112": {
            "parameters": [],
            "returns": []
        },
        "113": {
            "parameters": [
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                }
            ]
        },
        "114": {
            "parameters": [],
            "returns": []
        },
        "115": {
            "parameters": [
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Image for inpainting with mask",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                }
            ]
        },
        "116": {
            "parameters": [],
            "returns": []
        },
        "117": {
            "parameters": [
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Color sketch inpainting",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                }
            ]
        },
        "118": {
            "parameters": [],
            "returns": []
        },
        "119": {
            "parameters": [
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                }
            ]
        },
        "120": {
            "parameters": [],
            "returns": []
        },
        "121": {
            "parameters": [
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Image for inpainting with mask",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                }
            ]
        },
        "122": {
            "parameters": [],
            "returns": []
        },
        "123": {
            "parameters": [
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Color sketch inpainting",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                }
            ]
        },
        "124": {
            "parameters": [],
            "returns": []
        },
        "125": {
            "parameters": [
                {
                    "label": "Image for inpainting with mask",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                }
            ]
        },
        "126": {
            "parameters": [],
            "returns": []
        },
        "127": {
            "parameters": [
                {
                    "label": "Image for inpainting with mask",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                }
            ]
        },
        "128": {
            "parameters": [],
            "returns": []
        },
        "129": {
            "parameters": [
                {
                    "label": "Image for inpainting with mask",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Color sketch inpainting",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                }
            ]
        },
        "130": {
            "parameters": [],
            "returns": []
        },
        "131": {
            "parameters": [
                {
                    "label": "Color sketch inpainting",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                }
            ]
        },
        "132": {
            "parameters": [],
            "returns": []
        },
        "133": {
            "parameters": [
                {
                    "label": "Color sketch inpainting",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                }
            ]
        },
        "134": {
            "parameters": [],
            "returns": []
        },
        "135": {
            "parameters": [
                {
                    "label": "Color sketch inpainting",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Image for inpainting with mask",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "serializer": "ImgSerializable"
                }
            ]
        },
        "136": {
            "parameters": [],
            "returns": []
        },
        "143": {
            "parameters": [
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.05 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.05 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 0.05,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_349",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "144": {
            "parameters": [
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.05 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.05 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 0.05,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_349",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "145": {
            "parameters": [],
            "returns": []
        },
        "146": {
            "parameters": [],
            "returns": []
        },
        "147": {
            "parameters": [],
            "returns": []
        },
        "148": {
            "parameters": [],
            "returns": []
        },
        "152": {
            "parameters": [
                {
                    "label": "Override settings",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Override settings",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "153": {
            "parameters": [],
            "returns": []
        },
        "154": {
            "parameters": [
                {
                    "label": "Upload prompt inputs",
                    "type": {
                        "oneOf": [
                            {
                                "type": "string",
                                "description": "filepath or URL to file"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "name of file"
                                    },
                                    "data": {
                                        "type": "string",
                                        "description": "base64 representation of file"
                                    },
                                    "size": {
                                        "type": "integer",
                                        "description": "size of image in bytes"
                                    },
                                    "is_file": {
                                        "type": "boolean",
                                        "description": "true if the file has been uploaded to the server"
                                    },
                                    "orig_name": {
                                        "type": "string",
                                        "description": "original name of the file"
                                    }
                                },
                                "required": [
                                    "name",
                                    "data"
                                ]
                            }
                        ]
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to file"
                    },
                    "component": "File",
                    "example_input": "https://github.com/gradio-app/gradio/raw/main/test/test_files/sample_file.pdf",
                    "serializer": "FileSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Upload prompt inputs",
                    "type": {
                        "oneOf": [
                            {
                                "type": "string",
                                "description": "filepath or URL to file"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "name of file"
                                    },
                                    "data": {
                                        "type": "string",
                                        "description": "base64 representation of file"
                                    },
                                    "size": {
                                        "type": "integer",
                                        "description": "size of image in bytes"
                                    },
                                    "is_file": {
                                        "type": "boolean",
                                        "description": "true if the file has been uploaded to the server"
                                    },
                                    "orig_name": {
                                        "type": "string",
                                        "description": "original name of the file"
                                    }
                                },
                                "required": [
                                    "name",
                                    "data"
                                ]
                            }
                        ]
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to file"
                    },
                    "component": "File",
                    "serializer": "FileSerializable"
                },
                {
                    "label": "List of prompt inputs",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "List of prompt inputs",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "155": {
            "parameters": [
                {
                    "label": "List of prompt inputs",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "List of prompt inputs",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "156": {
            "parameters": [
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "157": {
            "parameters": [
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "158": {
            "parameters": [
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "159": {
            "parameters": [
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "X values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "160": {
            "parameters": [
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Y values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "161": {
            "parameters": [
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Z values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "162": {
            "parameters": [
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_455",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Button",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "163": {
            "parameters": [
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_461",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Button",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "164": {
            "parameters": [
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_467",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Button",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "166": {
            "parameters": [],
            "returns": []
        },
        "167": {
            "parameters": [
                {
                    "label": "parameter_501",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "parameter_499",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "parameter_499",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_499",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_499",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "168": {
            "parameters": [
                {
                    "label": "parameter_501",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "example_input": [
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png"
                    ],
                    "serializer": "GallerySerializable"
                },
                {
                    "label": "parameter_499",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "parameter_499",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_497",
                    "type": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "description": "filepath or URL to file"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of filepath(s) or URL(s) to files"
                    },
                    "component": "File",
                    "serializer": "FileSerializable"
                },
                {
                    "label": "value_500",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "169": {
            "parameters": [
                {
                    "label": "parameter_501",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "example_input": [
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png"
                    ],
                    "serializer": "GallerySerializable"
                },
                {
                    "label": "parameter_499",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "parameter_499",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_497",
                    "type": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "description": "filepath or URL to file"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of filepath(s) or URL(s) to files"
                    },
                    "component": "File",
                    "serializer": "FileSerializable"
                },
                {
                    "label": "value_500",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "170": {
            "parameters": [
                {
                    "label": "parameter_501",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "value_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "serializer": "JSONSerializable"
                }
            ]
        },
        "171": {
            "parameters": [
                {
                    "label": "parameter_501",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Variation seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "value_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "serializer": "JSONSerializable"
                }
            ]
        },
        "172": {
            "parameters": [
                {
                    "label": "",
                    "type": {
                        "oneOf": [
                            {
                                "type": "string",
                                "description": "filepath or URL to file"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "name of file"
                                    },
                                    "data": {
                                        "type": "string",
                                        "description": "base64 representation of file"
                                    },
                                    "size": {
                                        "type": "integer",
                                        "description": "size of image in bytes"
                                    },
                                    "is_file": {
                                        "type": "boolean",
                                        "description": "true if the file has been uploaded to the server"
                                    },
                                    "orig_name": {
                                        "type": "string",
                                        "description": "original name of the file"
                                    }
                                },
                                "required": [
                                    "name",
                                    "data"
                                ]
                            }
                        ]
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to file"
                    },
                    "component": "File",
                    "example_input": "https://github.com/gradio-app/gradio/raw/main/test/test_files/sample_file.pdf",
                    "serializer": "FileSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "",
                    "type": {
                        "oneOf": [
                            {
                                "type": "string",
                                "description": "filepath or URL to file"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "name of file"
                                    },
                                    "data": {
                                        "type": "string",
                                        "description": "base64 representation of file"
                                    },
                                    "size": {
                                        "type": "integer",
                                        "description": "size of image in bytes"
                                    },
                                    "is_file": {
                                        "type": "boolean",
                                        "description": "true if the file has been uploaded to the server"
                                    },
                                    "orig_name": {
                                        "type": "string",
                                        "description": "original name of the file"
                                    }
                                },
                                "required": [
                                    "name",
                                    "data"
                                ]
                            }
                        ]
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to file"
                    },
                    "component": "File",
                    "serializer": "FileSerializable"
                }
            ]
        },
        "173": {
            "parameters": [
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Styles",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Image for inpainting with mask",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Color sketch inpainting",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Mask",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Sampling steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Sampling method",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM']"
                    },
                    "component": "Dropdown",
                    "example_input": "Euler a",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Mask blur",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 64"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 64"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Mask transparency",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 100"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 100"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Masked content",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "fill",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Restore faces",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Tiling",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Batch count",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 100"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 100"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Batch size",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 8"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 8"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "CFG Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Image CFG Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 3.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 3.0"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Denoising strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Variation seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Variation strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize seed from height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize seed from width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Extra",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.05 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.05 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 0.05,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize mode",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Just resize",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Inpaint area",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Whole picture",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Only masked padding, pixels",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 256"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 256"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Mask mode",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Inpaint masked",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Input directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Inpaint batch mask directory (required for inpaint batch processing only)",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Override settings",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Script",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'img2img alternative test', 'Loopback', 'Outpainting mk2', \"Poor man's outpainting\", 'Prompt matrix', 'Prompts from file or textbox', 'SD upscale', 'X/Y/Z plot']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'img2img alternative test', 'Loopback', 'Outpainting mk2', \"Poor man's outpainting\", 'Prompt matrix', 'Prompts from file or textbox', 'SD upscale', 'X/Y/Z plot']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "parameter_390",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Markdown",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Override `Sampling method` to Euler?(this method is built for it)",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Override `prompt` to the same value as `original prompt`?(and `negative prompt`)",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Original prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Original negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Override `Sampling Steps` to the same value as `Decode steps`?",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Decode steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Override `Denoising strength` to 1?",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Decode CFG scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 15.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 15.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Randomness",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Sigma adjustment for finding noise for image",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Loops",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 32"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 32"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Final denoising strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Denoising strength curve",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Aggressive', 'Linear', 'Lazy']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Aggressive', 'Linear', 'Lazy']"
                    },
                    "component": "Dropdown",
                    "example_input": "Aggressive",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Append interrogated prompt at each iteration",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'CLIP', 'DeepBooru']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'CLIP', 'DeepBooru']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "parameter_409",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Pixels to expand",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 8 and 256"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 8 and 256"
                    },
                    "component": "Slider",
                    "example_input": 8,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Mask blur",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 64"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 64"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Outpainting direction",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "example_input": "left",
                    "serializer": "ListStringSerializable"
                },
                {
                    "label": "Fall-off exponent (lower=higher detail)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Color variation",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Pixels to expand",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 8 and 256"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 8 and 256"
                    },
                    "component": "Slider",
                    "example_input": 8,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Mask blur",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 64"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 64"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Masked content",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "fill",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Outpainting direction",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "example_input": "left",
                    "serializer": "ListStringSerializable"
                },
                {
                    "label": "Put variable parts at start of prompt",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use different seed for each picture",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Select prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "positive",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Select joining char",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "comma",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Grid margins (px)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 500"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 500"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Iterate seed every line",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use same random seed for all lines",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "List of prompt inputs",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "parameter_443",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Tile overlap",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 256"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 256"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Upscaler",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "None",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Scale Factor",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Draw legend",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Include Sub Images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Include Sub Grids",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Keep -1 for seeds",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Grid margins (px)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 500"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 500"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "serializer": "GallerySerializable"
                },
                {
                    "label": "value_501",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_499",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_500",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "174": {
            "parameters": [
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Styles",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Image for inpainting with mask",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Color sketch inpainting",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Mask",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Sampling steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Sampling method",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM']"
                    },
                    "component": "Dropdown",
                    "example_input": "Euler a",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Mask blur",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 64"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 64"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Mask transparency",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 100"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 100"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Masked content",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "fill",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Restore faces",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Tiling",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Batch count",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 100"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 100"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Batch size",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 8"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 8"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "CFG Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Image CFG Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 3.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 3.0"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Denoising strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Variation seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Variation strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize seed from height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize seed from width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Extra",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.05 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.05 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 0.05,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize mode",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Just resize",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Inpaint area",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Whole picture",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Only masked padding, pixels",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 256"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 256"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Mask mode",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Inpaint masked",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Input directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Inpaint batch mask directory (required for inpaint batch processing only)",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Override settings",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Script",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'img2img alternative test', 'Loopback', 'Outpainting mk2', \"Poor man's outpainting\", 'Prompt matrix', 'Prompts from file or textbox', 'SD upscale', 'X/Y/Z plot']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'img2img alternative test', 'Loopback', 'Outpainting mk2', \"Poor man's outpainting\", 'Prompt matrix', 'Prompts from file or textbox', 'SD upscale', 'X/Y/Z plot']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "parameter_390",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Markdown",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Override `Sampling method` to Euler?(this method is built for it)",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Override `prompt` to the same value as `original prompt`?(and `negative prompt`)",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Original prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Original negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Override `Sampling Steps` to the same value as `Decode steps`?",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Decode steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Override `Denoising strength` to 1?",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Decode CFG scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 15.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 15.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Randomness",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Sigma adjustment for finding noise for image",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Loops",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 32"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 32"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Final denoising strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Denoising strength curve",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Aggressive', 'Linear', 'Lazy']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Aggressive', 'Linear', 'Lazy']"
                    },
                    "component": "Dropdown",
                    "example_input": "Aggressive",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Append interrogated prompt at each iteration",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'CLIP', 'DeepBooru']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'CLIP', 'DeepBooru']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "parameter_409",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Pixels to expand",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 8 and 256"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 8 and 256"
                    },
                    "component": "Slider",
                    "example_input": 8,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Mask blur",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 64"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 64"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Outpainting direction",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "example_input": "left",
                    "serializer": "ListStringSerializable"
                },
                {
                    "label": "Fall-off exponent (lower=higher detail)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Color variation",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Pixels to expand",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 8 and 256"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 8 and 256"
                    },
                    "component": "Slider",
                    "example_input": 8,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Mask blur",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 64"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 64"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Masked content",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "fill",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Outpainting direction",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "example_input": "left",
                    "serializer": "ListStringSerializable"
                },
                {
                    "label": "Put variable parts at start of prompt",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use different seed for each picture",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Select prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "positive",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Select joining char",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "comma",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Grid margins (px)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 500"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 500"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Iterate seed every line",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use same random seed for all lines",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "List of prompt inputs",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "parameter_443",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Tile overlap",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 256"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 256"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Upscaler",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "None",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Scale Factor",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Draw legend",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Include Sub Images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Include Sub Grids",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Keep -1 for seeds",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Grid margins (px)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 500"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 500"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "serializer": "GallerySerializable"
                },
                {
                    "label": "value_501",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_499",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_500",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "176": {
            "parameters": [
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                }
            ]
        },
        "177": {
            "parameters": [
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "serializer": "GallerySerializable"
                },
                {
                    "label": "value_501",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_499",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_500",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "178": {
            "parameters": [
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "Input directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Image for inpainting with mask",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Color sketch inpainting",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "serializer": "JSONSerializable"
                }
            ]
        },
        "179": {
            "parameters": [
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "Input directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Image for inpainting with mask",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Color sketch inpainting",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Image for img2img",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "serializer": "JSONSerializable"
                }
            ]
        },
        "180": {
            "parameters": [
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Styles",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Styles",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "181": {
            "parameters": [
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Styles",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Styles",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "182": {
            "parameters": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Styles",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Styles",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "183": {
            "parameters": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Styles",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Styles",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "184": {
            "parameters": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Sampling steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_228",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "185": {
            "parameters": [
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Sampling steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_230",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "186": {
            "parameters": [
                {
                    "label": "parameter_253",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "example_input": [
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                        "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png"
                    ],
                    "serializer": "GallerySerializable"
                },
                {
                    "label": "parameter_253",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_241",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_243",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_245",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_247",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "187": {
            "parameters": [
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                }
            ]
        },
        "188": {
            "parameters": [],
            "returns": []
        },
        "189": {
            "parameters": [],
            "returns": []
        },
        "190": {
            "parameters": [],
            "returns": []
        },
        "191": {
            "parameters": [],
            "returns": []
        },
        "192": {
            "parameters": [],
            "returns": []
        },
        "193": {
            "parameters": [],
            "returns": []
        },
        "194": {
            "parameters": [
                {
                    "label": "Source",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                },
                {
                    "label": "Batch Process",
                    "type": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "description": "filepath or URL to file"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of filepath(s) or URL(s) to files"
                    },
                    "component": "File",
                    "example_input": [
                        "https://github.com/gradio-app/gradio/raw/main/test/test_files/sample_file.pdf"
                    ],
                    "serializer": "FileSerializable"
                },
                {
                    "label": "Input directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Show result images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Resize",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 8.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 8.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Crop to fit",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Upscaler 1",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Upscaler 2",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Upscaler 2 visibility",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "GFPGAN visibility",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "CodeFormer visibility",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "CodeFormer weight (0 = maximum effect, 1 = minimum effect)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Output",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": false,
                            "maxSize": 2,
                            "minSize": 2,
                            "prefixItems": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "name of file"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "base64 representation of file"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "size of image in bytes"
                                        },
                                        "is_file": {
                                            "type": "boolean",
                                            "description": "true if the file has been uploaded to the server"
                                        },
                                        "orig_name": {
                                            "type": "string",
                                            "description": "original name of the file"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "data"
                                    ]
                                },
                                {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "caption of image"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "python_type": {
                        "type": "str",
                        "description": "path to directory with images and a file associating images with captions called captions.json"
                    },
                    "component": "Gallery",
                    "serializer": "GallerySerializable"
                },
                {
                    "label": "value_568",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_569",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "195": {
            "parameters": [],
            "returns": []
        },
        "196": {
            "parameters": [
                {
                    "label": "Source",
                    "type": {
                        "type": "string",
                        "description": "base64 representation of an image"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to image"
                    },
                    "component": "Image",
                    "example_input": "https://raw.githubusercontent.com/gradio-app/gradio/main/test/test_files/bus.png",
                    "serializer": "ImgSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_576",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_577",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_578",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "197": {
            "parameters": [],
            "returns": [
                {
                    "label": "Primary model (A)",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "198": {
            "parameters": [],
            "returns": [
                {
                    "label": "Secondary model (B)",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "199": {
            "parameters": [],
            "returns": [
                {
                    "label": "Tertiary model (C)",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "200": {
            "parameters": [
                {
                    "label": "Interpolation Method",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "No interpolation",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_588",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "201": {
            "parameters": [],
            "returns": [
                {
                    "label": "Bake in VAE",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "205": {
            "parameters": [],
            "returns": [
                {
                    "label": "Embedding",
                    "type": {
                        "type": "string",
                        "description": "Option from: []"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "206": {
            "parameters": [],
            "returns": [
                {
                    "label": "Hypernetwork",
                    "type": {
                        "type": "string",
                        "description": "Option from: []"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "207": {
            "parameters": [],
            "returns": [
                {
                    "label": "Prompt template",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['hypernetwork.txt', 'none.txt', 'style.txt', 'style_filewords.txt', 'subject.txt', 'subject_filewords.txt']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['hypernetwork.txt', 'none.txt', 'style.txt', 'style_filewords.txt', 'subject.txt', 'subject_filewords.txt']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "208": {
            "parameters": [
                {
                    "label": "Name",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Initialization text",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Number of vectors per token",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 75"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 75"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Overwrite Old Embedding",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Embedding",
                    "type": {
                        "type": "string",
                        "description": "Option from: []"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "value_748",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_751",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "209": {
            "parameters": [
                {
                    "label": "Name",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Modules",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "example_input": "768",
                    "serializer": "ListStringSerializable"
                },
                {
                    "label": "Overwrite Old Hypernetwork",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Enter hypernetwork layer structure",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Select activation function of hypernetwork. Recommended : Swish / Linear(none)",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['linear', 'relu', 'leakyrelu', 'elu', 'swish', 'tanh', 'sigmoid', 'celu', 'gelu', 'glu', 'hardshrink', 'hardsigmoid', 'hardtanh', 'logsigmoid', 'logsoftmax', 'mish', 'prelu', 'rrelu', 'relu6', 'selu', 'silu', 'softmax', 'softmax2d', 'softmin', 'softplus', 'softshrink', 'softsign', 'tanhshrink', 'threshold']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['linear', 'relu', 'leakyrelu', 'elu', 'swish', 'tanh', 'sigmoid', 'celu', 'gelu', 'glu', 'hardshrink', 'hardsigmoid', 'hardtanh', 'logsigmoid', 'logsoftmax', 'mish', 'prelu', 'rrelu', 'relu6', 'selu', 'silu', 'softmax', 'softmax2d', 'softmin', 'softplus', 'softshrink', 'softsign', 'tanhshrink', 'threshold']"
                    },
                    "component": "Dropdown",
                    "example_input": "linear",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Select Layer weights initialization. Recommended: Kaiming for relu-like, Xavier for sigmoid-like, Normal otherwise",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Normal', 'KaimingUniform', 'KaimingNormal', 'XavierUniform', 'XavierNormal']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Normal', 'KaimingUniform', 'KaimingNormal', 'XavierUniform', 'XavierNormal']"
                    },
                    "component": "Dropdown",
                    "example_input": "Normal",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Add layer normalization",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use dropout",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Enter hypernetwork Dropout structure (or empty). Recommended : 0~0.35 incrementing sequence: 0, 0.05, 0.15",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Hypernetwork",
                    "type": {
                        "type": "string",
                        "description": "Option from: []"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "value_748",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_751",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "210": {
            "parameters": [
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "Source directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Destination directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Existing Caption txt Action",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['ignore', 'copy', 'prepend', 'append']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['ignore', 'copy', 'prepend', 'append']"
                    },
                    "component": "Dropdown",
                    "example_input": "ignore",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Keep original size",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Create flipped copies",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Split oversized images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use BLIP for caption",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use deepbooru for caption",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Split image threshold",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Split image overlap ratio",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 0.9"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 0.9"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Auto focal point crop",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Focal point face weight",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Focal point entropy weight",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Focal point edges weight",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Create debug image",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Auto-sized crop",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Dimension lower bound",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Dimension upper bound",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Area lower bound",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 4096 and 4194304"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 4096 and 4194304"
                    },
                    "component": "Slider",
                    "example_input": 4096,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Area upper bound",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 4096 and 4194304"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 4096 and 4194304"
                    },
                    "component": "Slider",
                    "example_input": 4096,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resizing objective",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Maximize area",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Error threshold",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_748",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_751",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "211": {
            "parameters": [
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "Embedding",
                    "type": {
                        "type": "string",
                        "description": "Option from: []"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: []"
                    },
                    "component": "Dropdown",
                    "example_input": null,
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Embedding Learning rate",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Batch size",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Gradient accumulation steps",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Dataset directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Log directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Do not resize images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Max steps",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Gradient Clipping",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['disabled', 'value', 'norm']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['disabled', 'value', 'norm']"
                    },
                    "component": "Dropdown",
                    "example_input": "disabled",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "parameter_716",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Shuffle tags by ',' when creating prompts.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Drop out tags when creating prompts.",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Choose latent sampling method",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "once",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Use PNG alpha channel as loss weight",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save an image to log directory every N steps, 0 to disable",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Save a copy of embedding to log directory every N steps, 0 to disable",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Prompt template",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['hypernetwork.txt', 'none.txt', 'style.txt', 'style_filewords.txt', 'subject.txt', 'subject_filewords.txt']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['hypernetwork.txt', 'none.txt', 'style.txt', 'style_filewords.txt', 'subject.txt', 'subject_filewords.txt']"
                    },
                    "component": "Dropdown",
                    "example_input": "hypernetwork.txt",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Save images with embedding in PNG chunks",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Read parameters (prompt, etc...) from txt2img tab when making previews",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Sampling steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Sampling method",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM', 'PLMS', 'UniPC']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM', 'PLMS', 'UniPC']"
                    },
                    "component": "Dropdown",
                    "example_input": "Euler a",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "CFG Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_748",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_751",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "212": {
            "parameters": [
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "Hypernetwork",
                    "type": {
                        "type": "string",
                        "description": "Option from: []"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: []"
                    },
                    "component": "Dropdown",
                    "example_input": null,
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Hypernetwork Learning rate",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Batch size",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Gradient accumulation steps",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Dataset directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Log directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Do not resize images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Max steps",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Gradient Clipping",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['disabled', 'value', 'norm']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['disabled', 'value', 'norm']"
                    },
                    "component": "Dropdown",
                    "example_input": "disabled",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "parameter_716",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Shuffle tags by ',' when creating prompts.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Drop out tags when creating prompts.",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Choose latent sampling method",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "once",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Use PNG alpha channel as loss weight",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save an image to log directory every N steps, 0 to disable",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Save a copy of embedding to log directory every N steps, 0 to disable",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Prompt template",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['hypernetwork.txt', 'none.txt', 'style.txt', 'style_filewords.txt', 'subject.txt', 'subject_filewords.txt']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['hypernetwork.txt', 'none.txt', 'style.txt', 'style_filewords.txt', 'subject.txt', 'subject_filewords.txt']"
                    },
                    "component": "Dropdown",
                    "example_input": "hypernetwork.txt",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Read parameters (prompt, etc...) from txt2img tab when making previews",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Sampling steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Sampling method",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM', 'PLMS', 'UniPC']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM', 'PLMS', 'UniPC']"
                    },
                    "component": "Dropdown",
                    "example_input": "Euler a",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "CFG Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_748",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_751",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "213": {
            "parameters": [],
            "returns": []
        },
        "214": {
            "parameters": [],
            "returns": []
        },
        "215": {
            "parameters": [],
            "returns": [
                {
                    "label": "SD VAE",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Automatic', 'None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Automatic', 'None']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "216": {
            "parameters": [],
            "returns": [
                {
                    "label": "SD Unet",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Automatic', 'None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Automatic', 'None']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "217": {
            "parameters": [],
            "returns": [
                {
                    "label": "CLIP: skip inquire categories",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "serializer": "ListStringSerializable"
                }
            ]
        },
        "218": {
            "parameters": [],
            "returns": [
                {
                    "label": "Add hypernetwork to prompt",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "219": {
            "parameters": [],
            "returns": [
                {
                    "label": "Add Lora to prompt",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "220": {
            "parameters": [],
            "returns": [
                {
                    "label": "Localization",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "221": {
            "parameters": [],
            "returns": []
        },
        "222": {
            "parameters": [],
            "returns": []
        },
        "223": {
            "parameters": [],
            "returns": []
        },
        "224": {
            "parameters": [],
            "returns": []
        },
        "225": {
            "parameters": [],
            "returns": []
        },
        "226": {
            "parameters": [],
            "returns": []
        },
        "227": {
            "parameters": [
                {
                    "label": "Check system info for validity",
                    "type": {
                        "oneOf": [
                            {
                                "type": "string",
                                "description": "filepath or URL to file"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "name of file"
                                    },
                                    "data": {
                                        "type": "string",
                                        "description": "base64 representation of file"
                                    },
                                    "size": {
                                        "type": "integer",
                                        "description": "size of image in bytes"
                                    },
                                    "is_file": {
                                        "type": "boolean",
                                        "description": "true if the file has been uploaded to the server"
                                    },
                                    "orig_name": {
                                        "type": "string",
                                        "description": "original name of the file"
                                    }
                                },
                                "required": [
                                    "name",
                                    "data"
                                ]
                            }
                        ]
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath or URL to file"
                    },
                    "component": "File",
                    "example_input": "https://github.com/gradio-app/gradio/raw/main/test/test_files/sample_file.pdf",
                    "serializer": "FileSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_1045",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "228": {
            "parameters": [],
            "returns": [
                {
                    "label": "value_1057",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "229": {
            "parameters": [],
            "returns": [
                {
                    "label": "value_1070",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "230": {
            "parameters": [
                {
                    "label": "parameter_1066",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "parameter_1067",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Disable all extensions",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "none",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": []
        },
        "231": {
            "parameters": [
                {
                    "label": "parameter_1069",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "parameter_1066",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_1070",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_1069",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "232": {
            "parameters": [
                {
                    "label": "Extension index URL",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Hide extensions with tags",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "example_input": "script",
                    "serializer": "ListStringSerializable"
                },
                {
                    "label": "Order",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "newest first",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Extension index URL",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_1086",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Hide extensions with tags",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "serializer": "ListStringSerializable"
                },
                {
                    "label": "value_1085",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Search",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "233": {
            "parameters": [
                {
                    "label": "parameter_1075",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Hide extensions with tags",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "example_input": "script",
                    "serializer": "ListStringSerializable"
                },
                {
                    "label": "Order",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "newest first",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Search",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_1086",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_1070",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_1085",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "234": {
            "parameters": [
                {
                    "label": "Search",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Hide extensions with tags",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "example_input": "script",
                    "serializer": "ListStringSerializable"
                },
                {
                    "label": "Order",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "newest first",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_1086",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_1085",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "235": {
            "parameters": [
                {
                    "label": "Hide extensions with tags",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "example_input": "script",
                    "serializer": "ListStringSerializable"
                },
                {
                    "label": "Order",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "newest first",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Search",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_1086",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_1085",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "236": {
            "parameters": [
                {
                    "label": "Hide extensions with tags",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "example_input": "script",
                    "serializer": "ListStringSerializable"
                },
                {
                    "label": "Order",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "newest first",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Search",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_1086",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_1085",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "237": {
            "parameters": [
                {
                    "label": "Local directory name",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "URL for extension's git repository",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Specific branch name",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "URL for extension's git repository",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_1070",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_1092",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "238": {
            "parameters": [],
            "returns": [
                {
                    "label": "Saved Configs",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Current']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Current']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                }
            ]
        },
        "239": {
            "parameters": [
                {
                    "label": "Saved Configs",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Current']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Current']"
                    },
                    "component": "Dropdown",
                    "example_input": "Current",
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_1106",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "240": {
            "parameters": [
                {
                    "label": "parameter_1102",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Saved Configs",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Current']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Current']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "value_1105",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "241": {
            "parameters": [
                {
                    "label": "parameter_1107",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "Saved Configs",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Current']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Current']"
                    },
                    "component": "Dropdown",
                    "example_input": "Current",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "State to restore",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "extensions",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_1105",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "242": {
            "parameters": [
                {
                    "label": "Saved Configs",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Current']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Current']"
                    },
                    "component": "Dropdown",
                    "example_input": "Current",
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_1106",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "243": {
            "parameters": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Styles",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Sampling method",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM', 'PLMS', 'UniPC']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM', 'PLMS', 'UniPC']"
                    },
                    "component": "Dropdown",
                    "example_input": "Euler a",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Sampling steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Restore faces",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Tiling",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Hires. fix",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Upscaler",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Latent', 'Latent (antialiased)', 'Latent (bicubic)', 'Latent (bicubic antialiased)', 'Latent (nearest)', 'Latent (nearest-exact)', 'None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Latent', 'Latent (antialiased)', 'Latent (bicubic)', 'Latent (bicubic antialiased)', 'Latent (nearest)', 'Latent (nearest-exact)', 'None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "component": "Dropdown",
                    "example_input": "Latent",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Hires steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 150"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Denoising strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Upscale by",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize width to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize height to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Hires sampling method",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Use same sampler', 'Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Use same sampler', 'Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM']"
                    },
                    "component": "Dropdown",
                    "example_input": "Use same sampler",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Hires prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Hires negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Batch count",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 100"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 100"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Batch size",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 8"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 8"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "CFG Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Extra",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Variation seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Variation strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize seed from width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize seed from height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Override settings",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Script",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'Prompt matrix', 'Prompts from file or textbox', 'X/Y/Z plot']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'Prompt matrix', 'Prompts from file or textbox', 'X/Y/Z plot']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Put variable parts at start of prompt",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use different seed for each picture",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Select prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "positive",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Select joining char",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "comma",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Grid margins (px)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 500"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 500"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Iterate seed every line",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use same random seed for all lines",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "List of prompt inputs",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Draw legend",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Keep -1 for seeds",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Include Sub Images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Include Sub Grids",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Grid margins (px)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 500"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 500"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Styles",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Input directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Inpaint batch mask directory (required for inpaint batch processing only)",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Resize mode",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Just resize",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Mask blur",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 64"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 64"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Mask transparency",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 100"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 100"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Mask mode",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Inpaint masked",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Masked content",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "fill",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Inpaint area",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Whole picture",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Only masked padding, pixels",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 256"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 256"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Sampling method",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM']"
                    },
                    "component": "Dropdown",
                    "example_input": "Euler a",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Sampling steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Restore faces",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Tiling",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.05 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.05 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 0.05,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Unused",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 100"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 100"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Batch count",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 100"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 100"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Batch size",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 8"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 8"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "CFG Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Image CFG Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 3.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 3.0"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Denoising strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Extra",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Variation seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Variation strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize seed from width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize seed from height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Override settings",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Script",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'img2img alternative test', 'Loopback', 'Outpainting mk2', \"Poor man's outpainting\", 'Prompt matrix', 'Prompts from file or textbox', 'SD upscale', 'X/Y/Z plot']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'img2img alternative test', 'Loopback', 'Outpainting mk2', \"Poor man's outpainting\", 'Prompt matrix', 'Prompts from file or textbox', 'SD upscale', 'X/Y/Z plot']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Override `Sampling method` to Euler?(this method is built for it)",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Override `prompt` to the same value as `original prompt`?(and `negative prompt`)",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Original prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Original negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Override `Sampling Steps` to the same value as `Decode steps`?",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Decode steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Override `Denoising strength` to 1?",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Decode CFG scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 15.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 15.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Randomness",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Sigma adjustment for finding noise for image",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Loops",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 32"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 32"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Final denoising strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Denoising strength curve",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Aggressive', 'Linear', 'Lazy']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Aggressive', 'Linear', 'Lazy']"
                    },
                    "component": "Dropdown",
                    "example_input": "Aggressive",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Append interrogated prompt at each iteration",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'CLIP', 'DeepBooru']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'CLIP', 'DeepBooru']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Pixels to expand",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 8 and 256"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 8 and 256"
                    },
                    "component": "Slider",
                    "example_input": 8,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Mask blur",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 64"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 64"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Fall-off exponent (lower=higher detail)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Color variation",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Pixels to expand",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 8 and 256"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 8 and 256"
                    },
                    "component": "Slider",
                    "example_input": 8,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Mask blur",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 64"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 64"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Masked content",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "fill",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Put variable parts at start of prompt",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use different seed for each picture",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Select prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "positive",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Select joining char",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "comma",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Grid margins (px)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 500"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 500"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Iterate seed every line",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use same random seed for all lines",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "List of prompt inputs",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Tile overlap",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 256"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 256"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Scale Factor",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Upscaler",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "None",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Draw legend",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Keep -1 for seeds",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Include Sub Images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Include Sub Grids",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Grid margins (px)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 500"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 500"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Input directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Show result images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Resize",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 8.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 8.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Crop to fit",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Upscaler 1",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Upscaler 2",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Upscaler 2 visibility",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "GFPGAN visibility",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "CodeFormer visibility",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "CodeFormer weight (0 = maximum effect, 1 = minimum effect)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Primary model (A)",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "example_input": "v1-5-pruned-emaonly.safetensors [6ce0161689]",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Secondary model (B)",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "example_input": "v1-5-pruned-emaonly.safetensors [6ce0161689]",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Tertiary model (C)",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "example_input": "v1-5-pruned-emaonly.safetensors [6ce0161689]",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Custom Name (Optional)",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Multiplier (M) - set to 0 to get model A",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Interpolation Method",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "No interpolation",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Checkpoint format",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "ckpt",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Save as float16",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save metadata (.safetensors only)",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Copy config from",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "A, B or C",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Bake in VAE",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Discard weights with matching name",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Name",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Initialization text",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Number of vectors per token",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 75"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 75"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Overwrite Old Embedding",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Enter hypernetwork layer structure",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Select activation function of hypernetwork. Recommended : Swish / Linear(none)",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['linear', 'relu', 'leakyrelu', 'elu', 'swish', 'tanh', 'sigmoid', 'celu', 'gelu', 'glu', 'hardshrink', 'hardsigmoid', 'hardtanh', 'logsigmoid', 'logsoftmax', 'mish', 'prelu', 'rrelu', 'relu6', 'selu', 'silu', 'softmax', 'softmax2d', 'softmin', 'softplus', 'softshrink', 'softsign', 'tanhshrink', 'threshold']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['linear', 'relu', 'leakyrelu', 'elu', 'swish', 'tanh', 'sigmoid', 'celu', 'gelu', 'glu', 'hardshrink', 'hardsigmoid', 'hardtanh', 'logsigmoid', 'logsoftmax', 'mish', 'prelu', 'rrelu', 'relu6', 'selu', 'silu', 'softmax', 'softmax2d', 'softmin', 'softplus', 'softshrink', 'softsign', 'tanhshrink', 'threshold']"
                    },
                    "component": "Dropdown",
                    "example_input": "linear",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Select Layer weights initialization. Recommended: Kaiming for relu-like, Xavier for sigmoid-like, Normal otherwise",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Normal', 'KaimingUniform', 'KaimingNormal', 'XavierUniform', 'XavierNormal']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Normal', 'KaimingUniform', 'KaimingNormal', 'XavierUniform', 'XavierNormal']"
                    },
                    "component": "Dropdown",
                    "example_input": "Normal",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Add layer normalization",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use dropout",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Enter hypernetwork Dropout structure (or empty). Recommended : 0~0.35 incrementing sequence: 0, 0.05, 0.15",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Overwrite Old Hypernetwork",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Source directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Destination directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Existing Caption txt Action",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['ignore', 'copy', 'prepend', 'append']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['ignore', 'copy', 'prepend', 'append']"
                    },
                    "component": "Dropdown",
                    "example_input": "ignore",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Keep original size",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Create flipped copies",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Split oversized images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Auto focal point crop",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Auto-sized crop",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use BLIP for caption",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use deepbooru for caption",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Split image threshold",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Split image overlap ratio",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 0.9"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 0.9"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Focal point face weight",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Focal point entropy weight",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Focal point edges weight",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Create debug image",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Dimension lower bound",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Dimension upper bound",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Area lower bound",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 4096 and 4194304"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 4096 and 4194304"
                    },
                    "component": "Slider",
                    "example_input": 4096,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Area upper bound",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 4096 and 4194304"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 4096 and 4194304"
                    },
                    "component": "Slider",
                    "example_input": 4096,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resizing objective",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Maximize area",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Error threshold",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Embedding",
                    "type": {
                        "type": "string",
                        "description": "Option from: []"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: []"
                    },
                    "component": "Dropdown",
                    "example_input": null,
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Hypernetwork",
                    "type": {
                        "type": "string",
                        "description": "Option from: []"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: []"
                    },
                    "component": "Dropdown",
                    "example_input": null,
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Embedding Learning rate",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Hypernetwork Learning rate",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Gradient Clipping",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['disabled', 'value', 'norm']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['disabled', 'value', 'norm']"
                    },
                    "component": "Dropdown",
                    "example_input": "disabled",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Batch size",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Gradient accumulation steps",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Dataset directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Log directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Prompt template",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['hypernetwork.txt', 'none.txt', 'style.txt', 'style_filewords.txt', 'subject.txt', 'subject_filewords.txt']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['hypernetwork.txt', 'none.txt', 'style.txt', 'style_filewords.txt', 'subject.txt', 'subject_filewords.txt']"
                    },
                    "component": "Dropdown",
                    "example_input": "hypernetwork.txt",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Do not resize images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Max steps",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Save an image to log directory every N steps, 0 to disable",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Save a copy of embedding to log directory every N steps, 0 to disable",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Use PNG alpha channel as loss weight",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save images with embedding in PNG chunks",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Read parameters (prompt, etc...) from txt2img tab when making previews",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Shuffle tags by ',' when creating prompts.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Drop out tags when creating prompts.",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Choose latent sampling method",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "once",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_1038",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "244": {
            "parameters": [
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Styles",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Sampling method",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM', 'PLMS', 'UniPC']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM', 'PLMS', 'UniPC']"
                    },
                    "component": "Dropdown",
                    "example_input": "Euler a",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Sampling steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Restore faces",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Tiling",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Hires. fix",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Upscaler",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Latent', 'Latent (antialiased)', 'Latent (bicubic)', 'Latent (bicubic antialiased)', 'Latent (nearest)', 'Latent (nearest-exact)', 'None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Latent', 'Latent (antialiased)', 'Latent (bicubic)', 'Latent (bicubic antialiased)', 'Latent (nearest)', 'Latent (nearest-exact)', 'None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "component": "Dropdown",
                    "example_input": "Latent",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Hires steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 150"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Denoising strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Upscale by",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize width to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize height to",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Hires sampling method",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Use same sampler', 'Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Use same sampler', 'Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM']"
                    },
                    "component": "Dropdown",
                    "example_input": "Use same sampler",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Hires prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Hires negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Batch count",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 100"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 100"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Batch size",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 8"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 8"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "CFG Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Extra",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Variation seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Variation strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize seed from width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize seed from height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Override settings",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Script",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'Prompt matrix', 'Prompts from file or textbox', 'X/Y/Z plot']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'Prompt matrix', 'Prompts from file or textbox', 'X/Y/Z plot']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Put variable parts at start of prompt",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use different seed for each picture",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Select prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "positive",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Select joining char",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "comma",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Grid margins (px)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 500"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 500"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Iterate seed every line",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use same random seed for all lines",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "List of prompt inputs",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'Hires steps', 'CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Hires upscaler', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Draw legend",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Keep -1 for seeds",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Include Sub Images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Include Sub Grids",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Grid margins (px)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 500"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 500"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Styles",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Input directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Inpaint batch mask directory (required for inpaint batch processing only)",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Resize mode",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Just resize",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Mask blur",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 64"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 64"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Mask transparency",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 100"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 100"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Mask mode",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Inpaint masked",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Masked content",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "fill",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Inpaint area",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Whole picture",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Only masked padding, pixels",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 256"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 256"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Sampling method",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Euler a', 'Euler', 'LMS', 'Heun', 'DPM2', 'DPM2 a', 'DPM++ 2S a', 'DPM++ 2M', 'DPM++ SDE', 'DPM++ 2M SDE', 'DPM fast', 'DPM adaptive', 'LMS Karras', 'DPM2 Karras', 'DPM2 a Karras', 'DPM++ 2S a Karras', 'DPM++ 2M Karras', 'DPM++ SDE Karras', 'DPM++ 2M SDE Karras', 'DDIM']"
                    },
                    "component": "Dropdown",
                    "example_input": "Euler a",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Sampling steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Restore faces",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Tiling",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.05 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.05 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 0.05,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Unused",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 100"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 100"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Batch count",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 100"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 100"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Batch size",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 8"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 8"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "CFG Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 30.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Image CFG Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 3.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 3.0"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Denoising strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Extra",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Variation seed",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Variation strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize seed from width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resize seed from height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Override settings",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Script",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'img2img alternative test', 'Loopback', 'Outpainting mk2', \"Poor man's outpainting\", 'Prompt matrix', 'Prompts from file or textbox', 'SD upscale', 'X/Y/Z plot']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'img2img alternative test', 'Loopback', 'Outpainting mk2', \"Poor man's outpainting\", 'Prompt matrix', 'Prompts from file or textbox', 'SD upscale', 'X/Y/Z plot']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Override `Sampling method` to Euler?(this method is built for it)",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Override `prompt` to the same value as `original prompt`?(and `negative prompt`)",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Original prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Original negative prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Override `Sampling Steps` to the same value as `Decode steps`?",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Decode steps",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 150"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 150"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Override `Denoising strength` to 1?",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Decode CFG scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 15.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 15.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Randomness",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Sigma adjustment for finding noise for image",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Loops",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 32"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 32"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Final denoising strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Denoising strength curve",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Aggressive', 'Linear', 'Lazy']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Aggressive', 'Linear', 'Lazy']"
                    },
                    "component": "Dropdown",
                    "example_input": "Aggressive",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Append interrogated prompt at each iteration",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'CLIP', 'DeepBooru']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'CLIP', 'DeepBooru']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Pixels to expand",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 8 and 256"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 8 and 256"
                    },
                    "component": "Slider",
                    "example_input": 8,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Mask blur",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 64"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 64"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Fall-off exponent (lower=higher detail)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Color variation",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Pixels to expand",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 8 and 256"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 8 and 256"
                    },
                    "component": "Slider",
                    "example_input": 8,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Mask blur",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 64"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 64"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Masked content",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "fill",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Put variable parts at start of prompt",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use different seed for each picture",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Select prompt",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "positive",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Select joining char",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "comma",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Grid margins (px)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 500"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 500"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Iterate seed every line",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use same random seed for all lines",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "List of prompt inputs",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Tile overlap",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 256"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 256"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Scale Factor",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Upscaler",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "None",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "X type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "X values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Y type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Y values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Z type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Nothing', 'Seed', 'Var. seed', 'Var. strength', 'Steps', 'CFG Scale', 'Image CFG Scale', 'Prompt S/R', 'Prompt order', 'Sampler', 'Checkpoint name', 'Negative Guidance minimum sigma', 'Sigma Churn', 'Sigma min', 'Sigma max', 'Sigma noise', 'Schedule type', 'Schedule min sigma', 'Schedule max sigma', 'Schedule rho', 'Eta', 'Clip skip', 'Denoising', 'Cond. Image Mask Weight', 'VAE', 'Styles', 'UniPC Order', 'Face restore', 'Token merging ratio', 'Token merging ratio high-res']"
                    },
                    "component": "Dropdown",
                    "example_input": "Nothing",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Z values",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Draw legend",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Keep -1 for seeds",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Include Sub Images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Include Sub Grids",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Grid margins (px)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 500"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 500"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Input directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Show result images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Resize",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1.0 and 8.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1.0 and 8.0"
                    },
                    "component": "Slider",
                    "example_input": 1.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Crop to fit",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Upscaler 1",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Upscaler 2",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Upscaler 2 visibility",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "GFPGAN visibility",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "CodeFormer visibility",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "CodeFormer weight (0 = maximum effect, 1 = minimum effect)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Primary model (A)",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "example_input": "v1-5-pruned-emaonly.safetensors [6ce0161689]",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Secondary model (B)",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "example_input": "v1-5-pruned-emaonly.safetensors [6ce0161689]",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Tertiary model (C)",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "example_input": "v1-5-pruned-emaonly.safetensors [6ce0161689]",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Custom Name (Optional)",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Multiplier (M) - set to 0 to get model A",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Interpolation Method",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "No interpolation",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Checkpoint format",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "ckpt",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Save as float16",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save metadata (.safetensors only)",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Copy config from",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "A, B or C",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Bake in VAE",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Discard weights with matching name",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Name",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Initialization text",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Number of vectors per token",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 75"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 75"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Overwrite Old Embedding",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Enter hypernetwork layer structure",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Select activation function of hypernetwork. Recommended : Swish / Linear(none)",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['linear', 'relu', 'leakyrelu', 'elu', 'swish', 'tanh', 'sigmoid', 'celu', 'gelu', 'glu', 'hardshrink', 'hardsigmoid', 'hardtanh', 'logsigmoid', 'logsoftmax', 'mish', 'prelu', 'rrelu', 'relu6', 'selu', 'silu', 'softmax', 'softmax2d', 'softmin', 'softplus', 'softshrink', 'softsign', 'tanhshrink', 'threshold']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['linear', 'relu', 'leakyrelu', 'elu', 'swish', 'tanh', 'sigmoid', 'celu', 'gelu', 'glu', 'hardshrink', 'hardsigmoid', 'hardtanh', 'logsigmoid', 'logsoftmax', 'mish', 'prelu', 'rrelu', 'relu6', 'selu', 'silu', 'softmax', 'softmax2d', 'softmin', 'softplus', 'softshrink', 'softsign', 'tanhshrink', 'threshold']"
                    },
                    "component": "Dropdown",
                    "example_input": "linear",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Select Layer weights initialization. Recommended: Kaiming for relu-like, Xavier for sigmoid-like, Normal otherwise",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Normal', 'KaimingUniform', 'KaimingNormal', 'XavierUniform', 'XavierNormal']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Normal', 'KaimingUniform', 'KaimingNormal', 'XavierUniform', 'XavierNormal']"
                    },
                    "component": "Dropdown",
                    "example_input": "Normal",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Add layer normalization",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use dropout",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Enter hypernetwork Dropout structure (or empty). Recommended : 0~0.35 incrementing sequence: 0, 0.05, 0.15",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Overwrite Old Hypernetwork",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Source directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Destination directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Width",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Height",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Existing Caption txt Action",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['ignore', 'copy', 'prepend', 'append']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['ignore', 'copy', 'prepend', 'append']"
                    },
                    "component": "Dropdown",
                    "example_input": "ignore",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Keep original size",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Create flipped copies",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Split oversized images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Auto focal point crop",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Auto-sized crop",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use BLIP for caption",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use deepbooru for caption",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Split image threshold",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Split image overlap ratio",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 0.9"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 0.9"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Focal point face weight",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Focal point entropy weight",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Focal point edges weight",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Create debug image",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Dimension lower bound",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Dimension upper bound",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 64 and 2048"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 64 and 2048"
                    },
                    "component": "Slider",
                    "example_input": 64,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Area lower bound",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 4096 and 4194304"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 4096 and 4194304"
                    },
                    "component": "Slider",
                    "example_input": 4096,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Area upper bound",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 4096 and 4194304"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 4096 and 4194304"
                    },
                    "component": "Slider",
                    "example_input": 4096,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Resizing objective",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Maximize area",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Error threshold",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Embedding",
                    "type": {
                        "type": "string",
                        "description": "Option from: []"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: []"
                    },
                    "component": "Dropdown",
                    "example_input": null,
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Hypernetwork",
                    "type": {
                        "type": "string",
                        "description": "Option from: []"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: []"
                    },
                    "component": "Dropdown",
                    "example_input": null,
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Embedding Learning rate",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Hypernetwork Learning rate",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Gradient Clipping",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['disabled', 'value', 'norm']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['disabled', 'value', 'norm']"
                    },
                    "component": "Dropdown",
                    "example_input": "disabled",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Batch size",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Gradient accumulation steps",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Dataset directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Log directory",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Prompt template",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['hypernetwork.txt', 'none.txt', 'style.txt', 'style_filewords.txt', 'subject.txt', 'subject_filewords.txt']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['hypernetwork.txt', 'none.txt', 'style.txt', 'style_filewords.txt', 'subject.txt', 'subject_filewords.txt']"
                    },
                    "component": "Dropdown",
                    "example_input": "hypernetwork.txt",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Do not resize images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Max steps",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Save an image to log directory every N steps, 0 to disable",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Save a copy of embedding to log directory every N steps, 0 to disable",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Use PNG alpha channel as loss weight",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save images with embedding in PNG chunks",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Read parameters (prompt, etc...) from txt2img tab when making previews",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Shuffle tags by ',' when creating prompts.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Drop out tags when creating prompts.",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Choose latent sampling method",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "once",
                    "serializer": "StringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_1038",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "245": {
            "parameters": [
                {
                    "label": "Always save all generated images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "File format for images",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Images filename pattern",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Add number to filename when saving",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Always save all generated image grids",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "File format for grids",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Add extended info (seed, prompt) to filename when saving grid",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Do not save grids consisting of one picture",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Prevent empty spots in grid (when set to autodetect)",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Archive filename pattern",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Grid row count; use -1 for autodetect and 0 for it to be same as batch size",
                    "type": {
                        "type": "number",
                        "description": "numeric value between -1 and 16"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between -1 and 16"
                    },
                    "component": "Slider",
                    "example_input": -1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Save text information about generation parameters as chunks to png files",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Create a text file next to every image with generation parameters.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save a copy of image before doing face restoration.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save a copy of image before applying highres fix.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save a copy of image before applying color correction to img2img results",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "For inpainting, save a copy of the greyscale mask",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "For inpainting, save a masked composite",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Quality for saved jpeg images",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 100"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 100"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Use lossless compression for webp images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save copy of large images as JPG",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "File size limit for the above option, MB",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Width/height limit for the above option, in pixels",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Maximum image size",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Use original name for output filename during batch process in extras tab",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use upscaler name as filename suffix in the extras tab",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "When using 'Save' button, only save a single selected image",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save init images when using img2img",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Directory for temporary images; leave empty for default",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Cleanup non-default temporary directory when starting webui",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Output directory for images; if empty, defaults to three directories below",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory for txt2img images",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory for img2img images",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory for images from extras tab",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory for grids; if empty, defaults to two directories below",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory for txt2img grids",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory for img2img grids",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Directory for saving images using the Save button",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Directory for saving init images when using img2img",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Save images to a subdirectory",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save grids to a subdirectory",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "When using \"Save\" button, save images to a subdirectory",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Directory name pattern",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Max prompt words for [prompt_words] pattern",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 20"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 20"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Tile size for ESRGAN upscalers.",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 512"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 512"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Tile overlap for ESRGAN upscalers.",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 48"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 48"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Select which Real-ESRGAN models to show in the web UI.",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "example_input": "R-ESRGAN General 4xV3",
                    "serializer": "ListStringSerializable"
                },
                {
                    "label": "Upscaler for img2img",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "LDSR processing steps. Lower = faster",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 200"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 200"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Cache LDSR model in memory",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Tile size for SCUNET upscalers.",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 512"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 512"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Tile overlap for SCUNET upscalers.",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 64"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 64"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Tile size for all SwinIR.",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 16 and 512"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 16 and 512"
                    },
                    "component": "Slider",
                    "example_input": 16,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Tile overlap, in pixels for SwinIR. Low values = visible seam.",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 48"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 48"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Face restoration model",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "CodeFormer",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "CodeFormer weight",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Move face restoration model from VRAM into RAM after processing",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Show warnings in console.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "VRAM usage polls per second during generation.",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 40"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 40"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Always print all generation info to standard output",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Add a second progress bar to the console that shows progress for an entire job.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Print extra hypernetwork information to console.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Load models/files in hidden directories",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Move VAE and CLIP to RAM when training if possible. Saves VRAM.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Turn on pin_memory for DataLoader. Makes training slightly faster but can increase memory usage.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Saves Optimizer state as separate *.optim file. Training of embedding or HN can be resumed with the matching optim file.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save textual inversion and hypernet settings to a text file whenever training starts.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Filename word regex",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Filename join string",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Number of repeats for a single input image per epoch; used only for displaying epoch number",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Save an csv containing the loss to log directory every N steps, 0 to disable",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Use cross attention optimizations while training",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Enable tensorboard logging.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save generated images within tensorboard.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "How often, in seconds, to flush the pending tensorboard events and summaries to disk.",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "Checkpoints to cache in RAM",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 10"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 10"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "VAE Checkpoints to cache in RAM",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 10"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 10"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "SD VAE",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Automatic', 'None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Automatic', 'None']"
                    },
                    "component": "Dropdown",
                    "example_input": "Automatic",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Ignore selected VAE for stable diffusion checkpoints that have their own .vae.pt next to them",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "SD Unet",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Automatic', 'None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Automatic', 'None']"
                    },
                    "component": "Dropdown",
                    "example_input": "Automatic",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Inpainting conditioning mask strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Noise multiplier for img2img",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.5 and 1.5"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.5 and 1.5"
                    },
                    "component": "Slider",
                    "example_input": 0.5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Apply color correction to img2img results to match original colors.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "With img2img, do exactly the amount of steps the slider specifies.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "With img2img, fill image's transparent parts with this color.",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Colorpicker",
                    "example_input": "#000000",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Enable quantization in K samplers for sharper and cleaner results. This may change existing seeds. Requires restart to apply.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Enable emphasis",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Make K-diffusion samplers produce same images in a batch as when making a single image",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Prompt word wrap length limit",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 74"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 74"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Clip skip",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 12"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 12"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Upcast cross attention layer to float32",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Random number generator source.",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "GPU",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Cross attention optimization",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Automatic', 'InvokeAI', 'Doggettx', 'sdp-no-mem - scaled dot product without memory efficient attention', 'sdp - scaled dot product', 'sub-quadratic', 'V1 - original v1', 'None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Automatic', 'InvokeAI', 'Doggettx', 'sdp-no-mem - scaled dot product without memory efficient attention', 'sdp - scaled dot product', 'sub-quadratic', 'V1 - original v1', 'None']"
                    },
                    "component": "Dropdown",
                    "example_input": "Automatic",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Negative Guidance minimum sigma",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 4.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Token merging ratio",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 0.9"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 0.9"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Token merging ratio for img2img",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 0.9"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 0.9"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Token merging ratio for high-res pass",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 0.9"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 0.9"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Pad prompt/negative prompt to be same length",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "persistent cond cache",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use old emphasis implementation. Can be useful to reproduce old seeds.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use old karras scheduler sigmas (0.1 to 10).",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Do not make DPM++ SDE deterministic across different batch sizes.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "For hires fix, use width/height sliders to set final resolution rather than first pass (disables Upscale by, Resize width/height to).",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Do not fix prompt schedule for second order samplers.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "For hires fix, calculate conds of second pass using extra networks of first pass.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Lora: use old method that takes longer when you have multiple Loras active and produces same results as kohya-ss/sd-webui-additional-networks extension",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Keep models in VRAM",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Include ranks of model tags matches in results.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "BLIP: num_beams",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 16"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 16"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "BLIP: minimum description length",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 128"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 128"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "BLIP: maximum description length",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 256"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 256"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "CLIP: maximum number of lines in text file",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "CLIP: skip inquire categories",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "example_input": null,
                    "serializer": "ListStringSerializable"
                },
                {
                    "label": "deepbooru: score threshold",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "deepbooru: sort tags alphabetically",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "deepbooru: use spaces in tags",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "deepbooru: escape (\\) brackets",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "deepbooru: filter out those tags",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Show hidden directories",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Show cards for models in hidden directories",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Always",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Default view for Extra Networks",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['cards', 'thumbs']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['cards', 'thumbs']"
                    },
                    "component": "Dropdown",
                    "example_input": "cards",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Multiplier for extra networks",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Card width for Extra Networks",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Card height for Extra Networks",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Extra networks separator",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Extra networks tab order",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Add hypernetwork to prompt",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Add Lora to prompt",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "When adding to prompt, refer to Lora by",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Alias from file",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Add Lora hashes to infotext",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Localization",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Gradio theme",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Default', 'gradio/glass', 'gradio/monochrome', 'gradio/seafoam', 'gradio/soft', 'freddyaboulton/dracula_revamped', 'gradio/dracula_test', 'abidlabs/dracula_test', 'abidlabs/pakistan', 'dawood/microsoft_windows', 'ysharma/steampunk']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Default', 'gradio/glass', 'gradio/monochrome', 'gradio/seafoam', 'gradio/soft', 'freddyaboulton/dracula_revamped', 'gradio/dracula_test', 'abidlabs/dracula_test', 'abidlabs/pakistan', 'dawood/microsoft_windows', 'ysharma/steampunk']"
                    },
                    "component": "Dropdown",
                    "example_input": "Default",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "img2img: height of image editor",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 80 and 1600"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 80 and 1600"
                    },
                    "component": "Slider",
                    "example_input": 80,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Show grid in results for web",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "For inpainting, include the greyscale mask in results for web",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "For inpainting, include masked composite in results for web",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Do not show any images in results for web",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Send seed when sending prompt or image to other interface",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Send size when sending prompt or image to another interface",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Font for image grids that have text",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Enable full page image viewer",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Show images zoomed in by default in full page image viewer",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Navigate image viewer with gamepad",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Gamepad repeat period, in milliseconds",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Show generation progress in window title.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use dropdown for sampler selection instead of radio group",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Show Width/Height and Batch sliders in same row",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Ctrl+up/down precision when editing (attention:1.1)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.01 and 0.2"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.01 and 0.2"
                    },
                    "component": "Slider",
                    "example_input": 0.01,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Ctrl+up/down precision when editing <extra networks:0.9>",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.01 and 0.2"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.01 and 0.2"
                    },
                    "component": "Slider",
                    "example_input": 0.01,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Ctrl+up/down word delimiters",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Quicksettings list",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: ['samples_save', 'samples_format', 'samples_filename_pattern', 'save_images_add_number', 'grid_save', 'grid_format', 'grid_extended_filename', 'grid_only_if_multiple', 'grid_prevent_empty_spots', 'grid_zip_filename_pattern', 'n_rows', 'enable_pnginfo', 'save_txt', 'save_images_before_face_restoration', 'save_images_before_highres_fix', 'save_images_before_color_correction', 'save_mask', 'save_mask_composite', 'jpeg_quality', 'webp_lossless', 'export_for_4chan', 'img_downscale_threshold', 'target_side_length', 'img_max_size_mp', 'use_original_name_batch', 'use_upscaler_name_as_suffix', 'save_selected_only', 'save_init_img', 'temp_dir', 'clean_temp_dir_at_start', 'outdir_samples', 'outdir_txt2img_samples', 'outdir_img2img_samples', 'outdir_extras_samples', 'outdir_grids', 'outdir_txt2img_grids', 'outdir_img2img_grids', 'outdir_save', 'outdir_init_images', 'save_to_dirs', 'grid_save_to_dirs', 'use_save_to_dirs_for_ui', 'directories_filename_pattern', 'directories_max_prompt_words', 'ESRGAN_tile', 'ESRGAN_tile_overlap', 'realesrgan_enabled_models', 'upscaler_for_img2img', 'ldsr_steps', 'ldsr_cached', 'SCUNET_tile', 'SCUNET_tile_overlap', 'SWIN_tile', 'SWIN_tile_overlap', 'face_restoration_model', 'code_former_weight', 'face_restoration_unload', 'show_warnings', 'memmon_poll_rate', 'samples_log_stdout', 'multiple_tqdm', 'print_hypernet_extra', 'list_hidden_files', 'unload_models_when_training', 'pin_memory', 'save_optimizer_state', 'save_training_settings_to_txt', 'dataset_filename_word_regex', 'dataset_filename_join_string', 'training_image_repeats_per_epoch', 'training_write_csv_every', 'training_xattention_optimizations', 'training_enable_tensorboard', 'training_tensorboard_save_images', 'training_tensorboard_flush_every', 'sd_model_checkpoint', 'sd_checkpoint_cache', 'sd_vae_checkpoint_cache', 'sd_vae', 'sd_vae_as_default', 'sd_unet', 'inpainting_mask_weight', 'initial_noise_multiplier', 'img2img_color_correction', 'img2img_fix_steps', 'img2img_background_color', 'enable_quantization', 'enable_emphasis', 'enable_batch_seeds', 'comma_padding_backtrack', 'CLIP_stop_at_last_layers', 'upcast_attn', 'randn_source', 'cross_attention_optimization', 's_min_uncond', 'token_merging_ratio', 'token_merging_ratio_img2img', 'token_merging_ratio_hr', 'pad_cond_uncond', 'experimental_persistent_cond_cache', 'use_old_emphasis_implementation', 'use_old_karras_scheduler_sigmas', 'no_dpmpp_sde_batch_determinism', 'use_old_hires_fix_width_height', 'dont_fix_second_order_samplers_schedule', 'hires_fix_use_firstpass_conds', 'lora_functional', 'interrogate_keep_models_in_memory', 'interrogate_return_ranks', 'interrogate_clip_num_beams', 'interrogate_clip_min_length', 'interrogate_clip_max_length', 'interrogate_clip_dict_limit', 'interrogate_clip_skip_categories', 'interrogate_deepbooru_score_threshold', 'deepbooru_sort_alpha', 'deepbooru_use_spaces', 'deepbooru_escape', 'deepbooru_filter_tags', 'extra_networks_show_hidden_directories', 'extra_networks_hidden_models', 'extra_networks_default_view', 'extra_networks_default_multiplier', 'extra_networks_card_width', 'extra_networks_card_height', 'extra_networks_add_text_separator', 'ui_extra_networks_tab_reorder', 'sd_hypernetwork', 'sd_lora', 'lora_preferred_name', 'lora_add_hashes_to_infotext', 'localization', 'gradio_theme', 'img2img_editor_height', 'return_grid', 'return_mask', 'return_mask_composite', 'do_not_show_images', 'send_seed', 'send_size', 'font', 'js_modal_lightbox', 'js_modal_lightbox_initially_zoomed', 'js_modal_lightbox_gamepad', 'js_modal_lightbox_gamepad_repeat', 'show_progress_in_title', 'samplers_in_dropdown', 'dimensions_and_batch_together', 'keyedit_precision_attention', 'keyedit_precision_extra', 'keyedit_delimiters', 'quicksettings_list', 'ui_tab_order', 'hidden_tabs', 'ui_reorder_list', 'hires_fix_show_sampler', 'hires_fix_show_prompts', 'disable_token_counters', 'extra_options', 'extra_options_accordion', 'add_model_hash_to_info', 'add_model_name_to_info', 'add_version_to_infotext', 'disable_weights_auto_swap', 'infotext_styles', 'show_progressbar', 'live_previews_enable', 'live_previews_image_format', 'show_progress_grid', 'show_progress_every_n_steps', 'show_progress_type', 'live_preview_content', 'live_preview_refresh_period', 'hide_samplers', 'eta_ddim', 'eta_ancestral', 'ddim_discretize', 's_churn', 's_tmin', 's_noise', 'k_sched_type', 'sigma_min', 'sigma_max', 'rho', 'eta_noise_seed_delta', 'always_discard_next_to_last_sigma', 'uni_pc_variant', 'uni_pc_skip_type', 'uni_pc_order', 'uni_pc_lower_order_final', 'postprocessing_enable_in_main_ui', 'postprocessing_operation_order', 'upscaling_max_images_in_cache', 'disabled_extensions', 'disable_all_extensions', 'restore_config_state_file', 'sd_checkpoint_hash', 'canvas_hotkey_zoom', 'canvas_hotkey_adjust', 'canvas_hotkey_move', 'canvas_hotkey_fullscreen', 'canvas_hotkey_reset', 'canvas_hotkey_overlap', 'canvas_show_tooltip', 'canvas_disabled_functions']"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: ['samples_save', 'samples_format', 'samples_filename_pattern', 'save_images_add_number', 'grid_save', 'grid_format', 'grid_extended_filename', 'grid_only_if_multiple', 'grid_prevent_empty_spots', 'grid_zip_filename_pattern', 'n_rows', 'enable_pnginfo', 'save_txt', 'save_images_before_face_restoration', 'save_images_before_highres_fix', 'save_images_before_color_correction', 'save_mask', 'save_mask_composite', 'jpeg_quality', 'webp_lossless', 'export_for_4chan', 'img_downscale_threshold', 'target_side_length', 'img_max_size_mp', 'use_original_name_batch', 'use_upscaler_name_as_suffix', 'save_selected_only', 'save_init_img', 'temp_dir', 'clean_temp_dir_at_start', 'outdir_samples', 'outdir_txt2img_samples', 'outdir_img2img_samples', 'outdir_extras_samples', 'outdir_grids', 'outdir_txt2img_grids', 'outdir_img2img_grids', 'outdir_save', 'outdir_init_images', 'save_to_dirs', 'grid_save_to_dirs', 'use_save_to_dirs_for_ui', 'directories_filename_pattern', 'directories_max_prompt_words', 'ESRGAN_tile', 'ESRGAN_tile_overlap', 'realesrgan_enabled_models', 'upscaler_for_img2img', 'ldsr_steps', 'ldsr_cached', 'SCUNET_tile', 'SCUNET_tile_overlap', 'SWIN_tile', 'SWIN_tile_overlap', 'face_restoration_model', 'code_former_weight', 'face_restoration_unload', 'show_warnings', 'memmon_poll_rate', 'samples_log_stdout', 'multiple_tqdm', 'print_hypernet_extra', 'list_hidden_files', 'unload_models_when_training', 'pin_memory', 'save_optimizer_state', 'save_training_settings_to_txt', 'dataset_filename_word_regex', 'dataset_filename_join_string', 'training_image_repeats_per_epoch', 'training_write_csv_every', 'training_xattention_optimizations', 'training_enable_tensorboard', 'training_tensorboard_save_images', 'training_tensorboard_flush_every', 'sd_model_checkpoint', 'sd_checkpoint_cache', 'sd_vae_checkpoint_cache', 'sd_vae', 'sd_vae_as_default', 'sd_unet', 'inpainting_mask_weight', 'initial_noise_multiplier', 'img2img_color_correction', 'img2img_fix_steps', 'img2img_background_color', 'enable_quantization', 'enable_emphasis', 'enable_batch_seeds', 'comma_padding_backtrack', 'CLIP_stop_at_last_layers', 'upcast_attn', 'randn_source', 'cross_attention_optimization', 's_min_uncond', 'token_merging_ratio', 'token_merging_ratio_img2img', 'token_merging_ratio_hr', 'pad_cond_uncond', 'experimental_persistent_cond_cache', 'use_old_emphasis_implementation', 'use_old_karras_scheduler_sigmas', 'no_dpmpp_sde_batch_determinism', 'use_old_hires_fix_width_height', 'dont_fix_second_order_samplers_schedule', 'hires_fix_use_firstpass_conds', 'lora_functional', 'interrogate_keep_models_in_memory', 'interrogate_return_ranks', 'interrogate_clip_num_beams', 'interrogate_clip_min_length', 'interrogate_clip_max_length', 'interrogate_clip_dict_limit', 'interrogate_clip_skip_categories', 'interrogate_deepbooru_score_threshold', 'deepbooru_sort_alpha', 'deepbooru_use_spaces', 'deepbooru_escape', 'deepbooru_filter_tags', 'extra_networks_show_hidden_directories', 'extra_networks_hidden_models', 'extra_networks_default_view', 'extra_networks_default_multiplier', 'extra_networks_card_width', 'extra_networks_card_height', 'extra_networks_add_text_separator', 'ui_extra_networks_tab_reorder', 'sd_hypernetwork', 'sd_lora', 'lora_preferred_name', 'lora_add_hashes_to_infotext', 'localization', 'gradio_theme', 'img2img_editor_height', 'return_grid', 'return_mask', 'return_mask_composite', 'do_not_show_images', 'send_seed', 'send_size', 'font', 'js_modal_lightbox', 'js_modal_lightbox_initially_zoomed', 'js_modal_lightbox_gamepad', 'js_modal_lightbox_gamepad_repeat', 'show_progress_in_title', 'samplers_in_dropdown', 'dimensions_and_batch_together', 'keyedit_precision_attention', 'keyedit_precision_extra', 'keyedit_delimiters', 'quicksettings_list', 'ui_tab_order', 'hidden_tabs', 'ui_reorder_list', 'hires_fix_show_sampler', 'hires_fix_show_prompts', 'disable_token_counters', 'extra_options', 'extra_options_accordion', 'add_model_hash_to_info', 'add_model_name_to_info', 'add_version_to_infotext', 'disable_weights_auto_swap', 'infotext_styles', 'show_progressbar', 'live_previews_enable', 'live_previews_image_format', 'show_progress_grid', 'show_progress_every_n_steps', 'show_progress_type', 'live_preview_content', 'live_preview_refresh_period', 'hide_samplers', 'eta_ddim', 'eta_ancestral', 'ddim_discretize', 's_churn', 's_tmin', 's_noise', 'k_sched_type', 'sigma_min', 'sigma_max', 'rho', 'eta_noise_seed_delta', 'always_discard_next_to_last_sigma', 'uni_pc_variant', 'uni_pc_skip_type', 'uni_pc_order', 'uni_pc_lower_order_final', 'postprocessing_enable_in_main_ui', 'postprocessing_operation_order', 'upscaling_max_images_in_cache', 'disabled_extensions', 'disable_all_extensions', 'restore_config_state_file', 'sd_checkpoint_hash', 'canvas_hotkey_zoom', 'canvas_hotkey_adjust', 'canvas_hotkey_move', 'canvas_hotkey_fullscreen', 'canvas_hotkey_reset', 'canvas_hotkey_overlap', 'canvas_show_tooltip', 'canvas_disabled_functions']"
                    },
                    "component": "Dropdown",
                    "example_input": [
                        "samples_save"
                    ],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "UI tab order",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Hidden UI tabs",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "example_input": [],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "txt2img/img2img UI item order",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: ['inpaint', 'sampler', 'checkboxes', 'hires_fix', 'dimensions', 'cfg', 'seed', 'batch', 'override_settings', 'extra_options', 'scripts']"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: ['inpaint', 'sampler', 'checkboxes', 'hires_fix', 'dimensions', 'cfg', 'seed', 'batch', 'override_settings', 'extra_options', 'scripts']"
                    },
                    "component": "Dropdown",
                    "example_input": [
                        "inpaint"
                    ],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Hires fix: show hires sampler selection",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Hires fix: show hires prompt and negative prompt",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Disable prompt token counters",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Options in main UI",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: ['samples_save', 'samples_format', 'samples_filename_pattern', 'save_images_add_number', 'grid_save', 'grid_format', 'grid_extended_filename', 'grid_only_if_multiple', 'grid_prevent_empty_spots', 'grid_zip_filename_pattern', 'n_rows', 'enable_pnginfo', 'save_txt', 'save_images_before_face_restoration', 'save_images_before_highres_fix', 'save_images_before_color_correction', 'save_mask', 'save_mask_composite', 'jpeg_quality', 'webp_lossless', 'export_for_4chan', 'img_downscale_threshold', 'target_side_length', 'img_max_size_mp', 'use_original_name_batch', 'use_upscaler_name_as_suffix', 'save_selected_only', 'save_init_img', 'temp_dir', 'clean_temp_dir_at_start', 'outdir_samples', 'outdir_txt2img_samples', 'outdir_img2img_samples', 'outdir_extras_samples', 'outdir_grids', 'outdir_txt2img_grids', 'outdir_img2img_grids', 'outdir_save', 'outdir_init_images', 'save_to_dirs', 'grid_save_to_dirs', 'use_save_to_dirs_for_ui', 'directories_filename_pattern', 'directories_max_prompt_words', 'ESRGAN_tile', 'ESRGAN_tile_overlap', 'realesrgan_enabled_models', 'upscaler_for_img2img', 'ldsr_steps', 'ldsr_cached', 'SCUNET_tile', 'SCUNET_tile_overlap', 'SWIN_tile', 'SWIN_tile_overlap', 'face_restoration_model', 'code_former_weight', 'face_restoration_unload', 'show_warnings', 'memmon_poll_rate', 'samples_log_stdout', 'multiple_tqdm', 'print_hypernet_extra', 'list_hidden_files', 'unload_models_when_training', 'pin_memory', 'save_optimizer_state', 'save_training_settings_to_txt', 'dataset_filename_word_regex', 'dataset_filename_join_string', 'training_image_repeats_per_epoch', 'training_write_csv_every', 'training_xattention_optimizations', 'training_enable_tensorboard', 'training_tensorboard_save_images', 'training_tensorboard_flush_every', 'sd_model_checkpoint', 'sd_checkpoint_cache', 'sd_vae_checkpoint_cache', 'sd_vae', 'sd_vae_as_default', 'sd_unet', 'inpainting_mask_weight', 'initial_noise_multiplier', 'img2img_color_correction', 'img2img_fix_steps', 'img2img_background_color', 'enable_quantization', 'enable_emphasis', 'enable_batch_seeds', 'comma_padding_backtrack', 'CLIP_stop_at_last_layers', 'upcast_attn', 'randn_source', 'cross_attention_optimization', 's_min_uncond', 'token_merging_ratio', 'token_merging_ratio_img2img', 'token_merging_ratio_hr', 'pad_cond_uncond', 'experimental_persistent_cond_cache', 'use_old_emphasis_implementation', 'use_old_karras_scheduler_sigmas', 'no_dpmpp_sde_batch_determinism', 'use_old_hires_fix_width_height', 'dont_fix_second_order_samplers_schedule', 'hires_fix_use_firstpass_conds', 'lora_functional', 'interrogate_keep_models_in_memory', 'interrogate_return_ranks', 'interrogate_clip_num_beams', 'interrogate_clip_min_length', 'interrogate_clip_max_length', 'interrogate_clip_dict_limit', 'interrogate_clip_skip_categories', 'interrogate_deepbooru_score_threshold', 'deepbooru_sort_alpha', 'deepbooru_use_spaces', 'deepbooru_escape', 'deepbooru_filter_tags', 'extra_networks_show_hidden_directories', 'extra_networks_hidden_models', 'extra_networks_default_view', 'extra_networks_default_multiplier', 'extra_networks_card_width', 'extra_networks_card_height', 'extra_networks_add_text_separator', 'ui_extra_networks_tab_reorder', 'sd_hypernetwork', 'sd_lora', 'lora_preferred_name', 'lora_add_hashes_to_infotext', 'localization', 'gradio_theme', 'img2img_editor_height', 'return_grid', 'return_mask', 'return_mask_composite', 'do_not_show_images', 'send_seed', 'send_size', 'font', 'js_modal_lightbox', 'js_modal_lightbox_initially_zoomed', 'js_modal_lightbox_gamepad', 'js_modal_lightbox_gamepad_repeat', 'show_progress_in_title', 'samplers_in_dropdown', 'dimensions_and_batch_together', 'keyedit_precision_attention', 'keyedit_precision_extra', 'keyedit_delimiters', 'quicksettings_list', 'ui_tab_order', 'hidden_tabs', 'ui_reorder_list', 'hires_fix_show_sampler', 'hires_fix_show_prompts', 'disable_token_counters', 'extra_options', 'extra_options_accordion', 'add_model_hash_to_info', 'add_model_name_to_info', 'add_version_to_infotext', 'disable_weights_auto_swap', 'infotext_styles', 'show_progressbar', 'live_previews_enable', 'live_previews_image_format', 'show_progress_grid', 'show_progress_every_n_steps', 'show_progress_type', 'live_preview_content', 'live_preview_refresh_period', 'hide_samplers', 'eta_ddim', 'eta_ancestral', 'ddim_discretize', 's_churn', 's_tmin', 's_noise', 'k_sched_type', 'sigma_min', 'sigma_max', 'rho', 'eta_noise_seed_delta', 'always_discard_next_to_last_sigma', 'uni_pc_variant', 'uni_pc_skip_type', 'uni_pc_order', 'uni_pc_lower_order_final', 'postprocessing_enable_in_main_ui', 'postprocessing_operation_order', 'upscaling_max_images_in_cache', 'disabled_extensions', 'disable_all_extensions', 'restore_config_state_file', 'sd_checkpoint_hash', 'canvas_hotkey_zoom', 'canvas_hotkey_adjust', 'canvas_hotkey_move', 'canvas_hotkey_fullscreen', 'canvas_hotkey_reset', 'canvas_hotkey_overlap', 'canvas_show_tooltip', 'canvas_disabled_functions']"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: ['samples_save', 'samples_format', 'samples_filename_pattern', 'save_images_add_number', 'grid_save', 'grid_format', 'grid_extended_filename', 'grid_only_if_multiple', 'grid_prevent_empty_spots', 'grid_zip_filename_pattern', 'n_rows', 'enable_pnginfo', 'save_txt', 'save_images_before_face_restoration', 'save_images_before_highres_fix', 'save_images_before_color_correction', 'save_mask', 'save_mask_composite', 'jpeg_quality', 'webp_lossless', 'export_for_4chan', 'img_downscale_threshold', 'target_side_length', 'img_max_size_mp', 'use_original_name_batch', 'use_upscaler_name_as_suffix', 'save_selected_only', 'save_init_img', 'temp_dir', 'clean_temp_dir_at_start', 'outdir_samples', 'outdir_txt2img_samples', 'outdir_img2img_samples', 'outdir_extras_samples', 'outdir_grids', 'outdir_txt2img_grids', 'outdir_img2img_grids', 'outdir_save', 'outdir_init_images', 'save_to_dirs', 'grid_save_to_dirs', 'use_save_to_dirs_for_ui', 'directories_filename_pattern', 'directories_max_prompt_words', 'ESRGAN_tile', 'ESRGAN_tile_overlap', 'realesrgan_enabled_models', 'upscaler_for_img2img', 'ldsr_steps', 'ldsr_cached', 'SCUNET_tile', 'SCUNET_tile_overlap', 'SWIN_tile', 'SWIN_tile_overlap', 'face_restoration_model', 'code_former_weight', 'face_restoration_unload', 'show_warnings', 'memmon_poll_rate', 'samples_log_stdout', 'multiple_tqdm', 'print_hypernet_extra', 'list_hidden_files', 'unload_models_when_training', 'pin_memory', 'save_optimizer_state', 'save_training_settings_to_txt', 'dataset_filename_word_regex', 'dataset_filename_join_string', 'training_image_repeats_per_epoch', 'training_write_csv_every', 'training_xattention_optimizations', 'training_enable_tensorboard', 'training_tensorboard_save_images', 'training_tensorboard_flush_every', 'sd_model_checkpoint', 'sd_checkpoint_cache', 'sd_vae_checkpoint_cache', 'sd_vae', 'sd_vae_as_default', 'sd_unet', 'inpainting_mask_weight', 'initial_noise_multiplier', 'img2img_color_correction', 'img2img_fix_steps', 'img2img_background_color', 'enable_quantization', 'enable_emphasis', 'enable_batch_seeds', 'comma_padding_backtrack', 'CLIP_stop_at_last_layers', 'upcast_attn', 'randn_source', 'cross_attention_optimization', 's_min_uncond', 'token_merging_ratio', 'token_merging_ratio_img2img', 'token_merging_ratio_hr', 'pad_cond_uncond', 'experimental_persistent_cond_cache', 'use_old_emphasis_implementation', 'use_old_karras_scheduler_sigmas', 'no_dpmpp_sde_batch_determinism', 'use_old_hires_fix_width_height', 'dont_fix_second_order_samplers_schedule', 'hires_fix_use_firstpass_conds', 'lora_functional', 'interrogate_keep_models_in_memory', 'interrogate_return_ranks', 'interrogate_clip_num_beams', 'interrogate_clip_min_length', 'interrogate_clip_max_length', 'interrogate_clip_dict_limit', 'interrogate_clip_skip_categories', 'interrogate_deepbooru_score_threshold', 'deepbooru_sort_alpha', 'deepbooru_use_spaces', 'deepbooru_escape', 'deepbooru_filter_tags', 'extra_networks_show_hidden_directories', 'extra_networks_hidden_models', 'extra_networks_default_view', 'extra_networks_default_multiplier', 'extra_networks_card_width', 'extra_networks_card_height', 'extra_networks_add_text_separator', 'ui_extra_networks_tab_reorder', 'sd_hypernetwork', 'sd_lora', 'lora_preferred_name', 'lora_add_hashes_to_infotext', 'localization', 'gradio_theme', 'img2img_editor_height', 'return_grid', 'return_mask', 'return_mask_composite', 'do_not_show_images', 'send_seed', 'send_size', 'font', 'js_modal_lightbox', 'js_modal_lightbox_initially_zoomed', 'js_modal_lightbox_gamepad', 'js_modal_lightbox_gamepad_repeat', 'show_progress_in_title', 'samplers_in_dropdown', 'dimensions_and_batch_together', 'keyedit_precision_attention', 'keyedit_precision_extra', 'keyedit_delimiters', 'quicksettings_list', 'ui_tab_order', 'hidden_tabs', 'ui_reorder_list', 'hires_fix_show_sampler', 'hires_fix_show_prompts', 'disable_token_counters', 'extra_options', 'extra_options_accordion', 'add_model_hash_to_info', 'add_model_name_to_info', 'add_version_to_infotext', 'disable_weights_auto_swap', 'infotext_styles', 'show_progressbar', 'live_previews_enable', 'live_previews_image_format', 'show_progress_grid', 'show_progress_every_n_steps', 'show_progress_type', 'live_preview_content', 'live_preview_refresh_period', 'hide_samplers', 'eta_ddim', 'eta_ancestral', 'ddim_discretize', 's_churn', 's_tmin', 's_noise', 'k_sched_type', 'sigma_min', 'sigma_max', 'rho', 'eta_noise_seed_delta', 'always_discard_next_to_last_sigma', 'uni_pc_variant', 'uni_pc_skip_type', 'uni_pc_order', 'uni_pc_lower_order_final', 'postprocessing_enable_in_main_ui', 'postprocessing_operation_order', 'upscaling_max_images_in_cache', 'disabled_extensions', 'disable_all_extensions', 'restore_config_state_file', 'sd_checkpoint_hash', 'canvas_hotkey_zoom', 'canvas_hotkey_adjust', 'canvas_hotkey_move', 'canvas_hotkey_fullscreen', 'canvas_hotkey_reset', 'canvas_hotkey_overlap', 'canvas_show_tooltip', 'canvas_disabled_functions']"
                    },
                    "component": "Dropdown",
                    "example_input": [
                        "samples_save"
                    ],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Place options in main UI into an accordion",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Add model hash to generation information",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Add model name to generation information",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Add program version to generation information",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Disregard checkpoint information from pasted infotext",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Infer styles from prompts of pasted infotext",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Ignore",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Show progressbar",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Show live previews of the created image",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Live preview file format",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "jpeg",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Show previews of all images generated in a batch as a grid",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Live preview display period",
                    "type": {
                        "type": "number",
                        "description": "numeric value between -1 and 32"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between -1 and 32"
                    },
                    "component": "Slider",
                    "example_input": -1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Live preview method",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Full",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Live preview subject",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Combined",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Progressbar and preview update period",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Hide samplers in user interface",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "example_input": "Euler a",
                    "serializer": "ListStringSerializable"
                },
                {
                    "label": "Eta for DDIM",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Eta for ancestral samplers",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "img2img DDIM discretize",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "uniform",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "sigma churn",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "sigma tmin",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "sigma noise",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "scheduler type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Automatic', 'karras', 'exponential', 'polyexponential']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Automatic', 'karras', 'exponential', 'polyexponential']"
                    },
                    "component": "Dropdown",
                    "example_input": "Automatic",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "sigma min",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "sigma max",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "rho",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Eta noise seed delta",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "example_input": 5,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Always discard next-to-last sigma",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "UniPC variant",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "bh1",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "UniPC skip type",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "time_uniform",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "UniPC order",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 50"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 50"
                    },
                    "component": "Slider",
                    "example_input": 1,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "UniPC lower order final",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Enable postprocessing operations in txt2img and img2img tabs",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: ['CodeFormer', 'GFPGAN', 'Upscale']"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: ['CodeFormer', 'GFPGAN', 'Upscale']"
                    },
                    "component": "Dropdown",
                    "example_input": [
                        "CodeFormer"
                    ],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Postprocessing operation order",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: ['CodeFormer', 'GFPGAN', 'Upscale']"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: ['CodeFormer', 'GFPGAN', 'Upscale']"
                    },
                    "component": "Dropdown",
                    "example_input": [
                        "CodeFormer"
                    ],
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Maximum number of images in upscaling cache",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 10"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 10"
                    },
                    "component": "Slider",
                    "example_input": 0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "Zoom canvas",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Shift",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Adjust brush size",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "Shift",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Moving the canvas",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Fullscreen Mode, maximizes the picture so that it fits into the screen and stretches it to its full width ",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Reset zoom and canvas positon",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Toggle overlap",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Enable tooltip on the canvas",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Disable function that you don't use",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "example_input": "Zoom",
                    "serializer": "ListStringSerializable"
                }
            ],
            "returns": [
                {
                    "label": "value_1057",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "value_759",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "246": {
            "parameters": [
                {
                    "label": "Stable Diffusion checkpoint",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "example_input": "v1-5-pruned-emaonly.safetensors [6ce0161689]",
                    "serializer": "SimpleSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Stable Diffusion checkpoint",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "value_1057",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "247": {
            "parameters": [
                {
                    "label": "Stable Diffusion checkpoint",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "example_input": "v1-5-pruned-emaonly.safetensors [6ce0161689]",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Stable Diffusion checkpoint",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "value_1057",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "248": {
            "parameters": [],
            "returns": [
                {
                    "label": "Always save all generated images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "File format for images",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Images filename pattern",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Add number to filename when saving",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Always save all generated image grids",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "File format for grids",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Add extended info (seed, prompt) to filename when saving grid",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Do not save grids consisting of one picture",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Prevent empty spots in grid (when set to autodetect)",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Archive filename pattern",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Grid row count; use -1 for autodetect and 0 for it to be same as batch size",
                    "type": {
                        "type": "number",
                        "description": "numeric value between -1 and 16"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between -1 and 16"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Save text information about generation parameters as chunks to png files",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Create a text file next to every image with generation parameters.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save a copy of image before doing face restoration.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save a copy of image before applying highres fix.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save a copy of image before applying color correction to img2img results",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "For inpainting, save a copy of the greyscale mask",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "For inpainting, save a masked composite",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Quality for saved jpeg images",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 100"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 100"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Use lossless compression for webp images",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save copy of large images as JPG",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "File size limit for the above option, MB",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Width/height limit for the above option, in pixels",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Maximum image size",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Use original name for output filename during batch process in extras tab",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use upscaler name as filename suffix in the extras tab",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "When using 'Save' button, only save a single selected image",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save init images when using img2img",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Directory for temporary images; leave empty for default",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Cleanup non-default temporary directory when starting webui",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Output directory for images; if empty, defaults to three directories below",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory for txt2img images",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory for img2img images",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory for images from extras tab",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory for grids; if empty, defaults to two directories below",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory for txt2img grids",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Output directory for img2img grids",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Directory for saving images using the Save button",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Directory for saving init images when using img2img",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Save images to a subdirectory",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save grids to a subdirectory",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "When using \"Save\" button, save images to a subdirectory",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Directory name pattern",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Max prompt words for [prompt_words] pattern",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 20"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 20"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Tile size for ESRGAN upscalers.",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 512"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 512"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Tile overlap for ESRGAN upscalers.",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 48"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 48"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Select which Real-ESRGAN models to show in the web UI.",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "serializer": "ListStringSerializable"
                },
                {
                    "label": "Upscaler for img2img",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None', 'Lanczos', 'Nearest', 'ESRGAN_4x', 'LDSR', 'R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B', 'ScuNET GAN', 'ScuNET PSNR', 'SwinIR 4x']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "LDSR processing steps. Lower = faster",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 200"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 200"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Cache LDSR model in memory",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Tile size for SCUNET upscalers.",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 512"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 512"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Tile overlap for SCUNET upscalers.",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 64"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 64"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Tile size for all SwinIR.",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 16 and 512"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 16 and 512"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Tile overlap, in pixels for SwinIR. Low values = visible seam.",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 48"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 48"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Face restoration model",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "CodeFormer weight",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Move face restoration model from VRAM into RAM after processing",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Show warnings in console.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "VRAM usage polls per second during generation.",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 40"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 40"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Always print all generation info to standard output",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Add a second progress bar to the console that shows progress for an entire job.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Print extra hypernetwork information to console.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Load models/files in hidden directories",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Move VAE and CLIP to RAM when training if possible. Saves VRAM.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Turn on pin_memory for DataLoader. Makes training slightly faster but can increase memory usage.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Saves Optimizer state as separate *.optim file. Training of embedding or HN can be resumed with the matching optim file.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save textual inversion and hypernet settings to a text file whenever training starts.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Filename word regex",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Filename join string",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Number of repeats for a single input image per epoch; used only for displaying epoch number",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Save an csv containing the loss to log directory every N steps, 0 to disable",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Use cross attention optimizations while training",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Enable tensorboard logging.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Save generated images within tensorboard.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "How often, in seconds, to flush the pending tensorboard events and summaries to disk.",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Stable Diffusion checkpoint",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Checkpoints to cache in RAM",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 10"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 10"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "VAE Checkpoints to cache in RAM",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 10"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 10"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "SD VAE",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Automatic', 'None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Automatic', 'None']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Ignore selected VAE for stable diffusion checkpoints that have their own .vae.pt next to them",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "SD Unet",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Automatic', 'None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Automatic', 'None']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Inpainting conditioning mask strength",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Noise multiplier for img2img",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.5 and 1.5"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.5 and 1.5"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Apply color correction to img2img results to match original colors.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "With img2img, do exactly the amount of steps the slider specifies.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "With img2img, fill image's transparent parts with this color.",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Colorpicker",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Enable quantization in K samplers for sharper and cleaner results. This may change existing seeds. Requires restart to apply.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Enable emphasis",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Make K-diffusion samplers produce same images in a batch as when making a single image",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Prompt word wrap length limit",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 74"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 74"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Clip skip",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 12"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 12"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Upcast cross attention layer to float32",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Random number generator source.",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Cross attention optimization",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Automatic', 'InvokeAI', 'Doggettx', 'sdp-no-mem - scaled dot product without memory efficient attention', 'sdp - scaled dot product', 'sub-quadratic', 'V1 - original v1', 'None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Automatic', 'InvokeAI', 'Doggettx', 'sdp-no-mem - scaled dot product without memory efficient attention', 'sdp - scaled dot product', 'sub-quadratic', 'V1 - original v1', 'None']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Negative Guidance minimum sigma",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 4.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 4.0"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Token merging ratio",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 0.9"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 0.9"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Token merging ratio for img2img",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 0.9"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 0.9"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Token merging ratio for high-res pass",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 0.9"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 0.9"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Pad prompt/negative prompt to be same length",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "persistent cond cache",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use old emphasis implementation. Can be useful to reproduce old seeds.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use old karras scheduler sigmas (0.1 to 10).",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Do not make DPM++ SDE deterministic across different batch sizes.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "For hires fix, use width/height sliders to set final resolution rather than first pass (disables Upscale by, Resize width/height to).",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Do not fix prompt schedule for second order samplers.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "For hires fix, calculate conds of second pass using extra networks of first pass.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Lora: use old method that takes longer when you have multiple Loras active and produces same results as kohya-ss/sd-webui-additional-networks extension",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Keep models in VRAM",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Include ranks of model tags matches in results.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "BLIP: num_beams",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 16"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 16"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "BLIP: minimum description length",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 128"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 128"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "BLIP: maximum description length",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 256"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 256"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "CLIP: maximum number of lines in text file",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "CLIP: skip inquire categories",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "serializer": "ListStringSerializable"
                },
                {
                    "label": "deepbooru: score threshold",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 1"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 1"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "deepbooru: sort tags alphabetically",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "deepbooru: use spaces in tags",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "deepbooru: escape (\\) brackets",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "deepbooru: filter out those tags",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Show hidden directories",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Show cards for models in hidden directories",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Default view for Extra Networks",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['cards', 'thumbs']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['cards', 'thumbs']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Multiplier for extra networks",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Card width for Extra Networks",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Card height for Extra Networks",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Extra networks separator",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Extra networks tab order",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Add hypernetwork to prompt",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Add Lora to prompt",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "When adding to prompt, refer to Lora by",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Add Lora hashes to infotext",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Localization",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Gradio theme",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Default', 'gradio/glass', 'gradio/monochrome', 'gradio/seafoam', 'gradio/soft', 'freddyaboulton/dracula_revamped', 'gradio/dracula_test', 'abidlabs/dracula_test', 'abidlabs/pakistan', 'dawood/microsoft_windows', 'ysharma/steampunk']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Default', 'gradio/glass', 'gradio/monochrome', 'gradio/seafoam', 'gradio/soft', 'freddyaboulton/dracula_revamped', 'gradio/dracula_test', 'abidlabs/dracula_test', 'abidlabs/pakistan', 'dawood/microsoft_windows', 'ysharma/steampunk']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "img2img: height of image editor",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 80 and 1600"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 80 and 1600"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Show grid in results for web",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "For inpainting, include the greyscale mask in results for web",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "For inpainting, include masked composite in results for web",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Do not show any images in results for web",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Send seed when sending prompt or image to other interface",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Send size when sending prompt or image to another interface",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Font for image grids that have text",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Enable full page image viewer",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Show images zoomed in by default in full page image viewer",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Navigate image viewer with gamepad",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Gamepad repeat period, in milliseconds",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Show generation progress in window title.",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Use dropdown for sampler selection instead of radio group",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Show Width/Height and Batch sliders in same row",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Ctrl+up/down precision when editing (attention:1.1)",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.01 and 0.2"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.01 and 0.2"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Ctrl+up/down precision when editing <extra networks:0.9>",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.01 and 0.2"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.01 and 0.2"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Ctrl+up/down word delimiters",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Quicksettings list",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: ['samples_save', 'samples_format', 'samples_filename_pattern', 'save_images_add_number', 'grid_save', 'grid_format', 'grid_extended_filename', 'grid_only_if_multiple', 'grid_prevent_empty_spots', 'grid_zip_filename_pattern', 'n_rows', 'enable_pnginfo', 'save_txt', 'save_images_before_face_restoration', 'save_images_before_highres_fix', 'save_images_before_color_correction', 'save_mask', 'save_mask_composite', 'jpeg_quality', 'webp_lossless', 'export_for_4chan', 'img_downscale_threshold', 'target_side_length', 'img_max_size_mp', 'use_original_name_batch', 'use_upscaler_name_as_suffix', 'save_selected_only', 'save_init_img', 'temp_dir', 'clean_temp_dir_at_start', 'outdir_samples', 'outdir_txt2img_samples', 'outdir_img2img_samples', 'outdir_extras_samples', 'outdir_grids', 'outdir_txt2img_grids', 'outdir_img2img_grids', 'outdir_save', 'outdir_init_images', 'save_to_dirs', 'grid_save_to_dirs', 'use_save_to_dirs_for_ui', 'directories_filename_pattern', 'directories_max_prompt_words', 'ESRGAN_tile', 'ESRGAN_tile_overlap', 'realesrgan_enabled_models', 'upscaler_for_img2img', 'ldsr_steps', 'ldsr_cached', 'SCUNET_tile', 'SCUNET_tile_overlap', 'SWIN_tile', 'SWIN_tile_overlap', 'face_restoration_model', 'code_former_weight', 'face_restoration_unload', 'show_warnings', 'memmon_poll_rate', 'samples_log_stdout', 'multiple_tqdm', 'print_hypernet_extra', 'list_hidden_files', 'unload_models_when_training', 'pin_memory', 'save_optimizer_state', 'save_training_settings_to_txt', 'dataset_filename_word_regex', 'dataset_filename_join_string', 'training_image_repeats_per_epoch', 'training_write_csv_every', 'training_xattention_optimizations', 'training_enable_tensorboard', 'training_tensorboard_save_images', 'training_tensorboard_flush_every', 'sd_model_checkpoint', 'sd_checkpoint_cache', 'sd_vae_checkpoint_cache', 'sd_vae', 'sd_vae_as_default', 'sd_unet', 'inpainting_mask_weight', 'initial_noise_multiplier', 'img2img_color_correction', 'img2img_fix_steps', 'img2img_background_color', 'enable_quantization', 'enable_emphasis', 'enable_batch_seeds', 'comma_padding_backtrack', 'CLIP_stop_at_last_layers', 'upcast_attn', 'randn_source', 'cross_attention_optimization', 's_min_uncond', 'token_merging_ratio', 'token_merging_ratio_img2img', 'token_merging_ratio_hr', 'pad_cond_uncond', 'experimental_persistent_cond_cache', 'use_old_emphasis_implementation', 'use_old_karras_scheduler_sigmas', 'no_dpmpp_sde_batch_determinism', 'use_old_hires_fix_width_height', 'dont_fix_second_order_samplers_schedule', 'hires_fix_use_firstpass_conds', 'lora_functional', 'interrogate_keep_models_in_memory', 'interrogate_return_ranks', 'interrogate_clip_num_beams', 'interrogate_clip_min_length', 'interrogate_clip_max_length', 'interrogate_clip_dict_limit', 'interrogate_clip_skip_categories', 'interrogate_deepbooru_score_threshold', 'deepbooru_sort_alpha', 'deepbooru_use_spaces', 'deepbooru_escape', 'deepbooru_filter_tags', 'extra_networks_show_hidden_directories', 'extra_networks_hidden_models', 'extra_networks_default_view', 'extra_networks_default_multiplier', 'extra_networks_card_width', 'extra_networks_card_height', 'extra_networks_add_text_separator', 'ui_extra_networks_tab_reorder', 'sd_hypernetwork', 'sd_lora', 'lora_preferred_name', 'lora_add_hashes_to_infotext', 'localization', 'gradio_theme', 'img2img_editor_height', 'return_grid', 'return_mask', 'return_mask_composite', 'do_not_show_images', 'send_seed', 'send_size', 'font', 'js_modal_lightbox', 'js_modal_lightbox_initially_zoomed', 'js_modal_lightbox_gamepad', 'js_modal_lightbox_gamepad_repeat', 'show_progress_in_title', 'samplers_in_dropdown', 'dimensions_and_batch_together', 'keyedit_precision_attention', 'keyedit_precision_extra', 'keyedit_delimiters', 'quicksettings_list', 'ui_tab_order', 'hidden_tabs', 'ui_reorder_list', 'hires_fix_show_sampler', 'hires_fix_show_prompts', 'disable_token_counters', 'extra_options', 'extra_options_accordion', 'add_model_hash_to_info', 'add_model_name_to_info', 'add_version_to_infotext', 'disable_weights_auto_swap', 'infotext_styles', 'show_progressbar', 'live_previews_enable', 'live_previews_image_format', 'show_progress_grid', 'show_progress_every_n_steps', 'show_progress_type', 'live_preview_content', 'live_preview_refresh_period', 'hide_samplers', 'eta_ddim', 'eta_ancestral', 'ddim_discretize', 's_churn', 's_tmin', 's_noise', 'k_sched_type', 'sigma_min', 'sigma_max', 'rho', 'eta_noise_seed_delta', 'always_discard_next_to_last_sigma', 'uni_pc_variant', 'uni_pc_skip_type', 'uni_pc_order', 'uni_pc_lower_order_final', 'postprocessing_enable_in_main_ui', 'postprocessing_operation_order', 'upscaling_max_images_in_cache', 'disabled_extensions', 'disable_all_extensions', 'restore_config_state_file', 'sd_checkpoint_hash', 'canvas_hotkey_zoom', 'canvas_hotkey_adjust', 'canvas_hotkey_move', 'canvas_hotkey_fullscreen', 'canvas_hotkey_reset', 'canvas_hotkey_overlap', 'canvas_show_tooltip', 'canvas_disabled_functions']"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: ['samples_save', 'samples_format', 'samples_filename_pattern', 'save_images_add_number', 'grid_save', 'grid_format', 'grid_extended_filename', 'grid_only_if_multiple', 'grid_prevent_empty_spots', 'grid_zip_filename_pattern', 'n_rows', 'enable_pnginfo', 'save_txt', 'save_images_before_face_restoration', 'save_images_before_highres_fix', 'save_images_before_color_correction', 'save_mask', 'save_mask_composite', 'jpeg_quality', 'webp_lossless', 'export_for_4chan', 'img_downscale_threshold', 'target_side_length', 'img_max_size_mp', 'use_original_name_batch', 'use_upscaler_name_as_suffix', 'save_selected_only', 'save_init_img', 'temp_dir', 'clean_temp_dir_at_start', 'outdir_samples', 'outdir_txt2img_samples', 'outdir_img2img_samples', 'outdir_extras_samples', 'outdir_grids', 'outdir_txt2img_grids', 'outdir_img2img_grids', 'outdir_save', 'outdir_init_images', 'save_to_dirs', 'grid_save_to_dirs', 'use_save_to_dirs_for_ui', 'directories_filename_pattern', 'directories_max_prompt_words', 'ESRGAN_tile', 'ESRGAN_tile_overlap', 'realesrgan_enabled_models', 'upscaler_for_img2img', 'ldsr_steps', 'ldsr_cached', 'SCUNET_tile', 'SCUNET_tile_overlap', 'SWIN_tile', 'SWIN_tile_overlap', 'face_restoration_model', 'code_former_weight', 'face_restoration_unload', 'show_warnings', 'memmon_poll_rate', 'samples_log_stdout', 'multiple_tqdm', 'print_hypernet_extra', 'list_hidden_files', 'unload_models_when_training', 'pin_memory', 'save_optimizer_state', 'save_training_settings_to_txt', 'dataset_filename_word_regex', 'dataset_filename_join_string', 'training_image_repeats_per_epoch', 'training_write_csv_every', 'training_xattention_optimizations', 'training_enable_tensorboard', 'training_tensorboard_save_images', 'training_tensorboard_flush_every', 'sd_model_checkpoint', 'sd_checkpoint_cache', 'sd_vae_checkpoint_cache', 'sd_vae', 'sd_vae_as_default', 'sd_unet', 'inpainting_mask_weight', 'initial_noise_multiplier', 'img2img_color_correction', 'img2img_fix_steps', 'img2img_background_color', 'enable_quantization', 'enable_emphasis', 'enable_batch_seeds', 'comma_padding_backtrack', 'CLIP_stop_at_last_layers', 'upcast_attn', 'randn_source', 'cross_attention_optimization', 's_min_uncond', 'token_merging_ratio', 'token_merging_ratio_img2img', 'token_merging_ratio_hr', 'pad_cond_uncond', 'experimental_persistent_cond_cache', 'use_old_emphasis_implementation', 'use_old_karras_scheduler_sigmas', 'no_dpmpp_sde_batch_determinism', 'use_old_hires_fix_width_height', 'dont_fix_second_order_samplers_schedule', 'hires_fix_use_firstpass_conds', 'lora_functional', 'interrogate_keep_models_in_memory', 'interrogate_return_ranks', 'interrogate_clip_num_beams', 'interrogate_clip_min_length', 'interrogate_clip_max_length', 'interrogate_clip_dict_limit', 'interrogate_clip_skip_categories', 'interrogate_deepbooru_score_threshold', 'deepbooru_sort_alpha', 'deepbooru_use_spaces', 'deepbooru_escape', 'deepbooru_filter_tags', 'extra_networks_show_hidden_directories', 'extra_networks_hidden_models', 'extra_networks_default_view', 'extra_networks_default_multiplier', 'extra_networks_card_width', 'extra_networks_card_height', 'extra_networks_add_text_separator', 'ui_extra_networks_tab_reorder', 'sd_hypernetwork', 'sd_lora', 'lora_preferred_name', 'lora_add_hashes_to_infotext', 'localization', 'gradio_theme', 'img2img_editor_height', 'return_grid', 'return_mask', 'return_mask_composite', 'do_not_show_images', 'send_seed', 'send_size', 'font', 'js_modal_lightbox', 'js_modal_lightbox_initially_zoomed', 'js_modal_lightbox_gamepad', 'js_modal_lightbox_gamepad_repeat', 'show_progress_in_title', 'samplers_in_dropdown', 'dimensions_and_batch_together', 'keyedit_precision_attention', 'keyedit_precision_extra', 'keyedit_delimiters', 'quicksettings_list', 'ui_tab_order', 'hidden_tabs', 'ui_reorder_list', 'hires_fix_show_sampler', 'hires_fix_show_prompts', 'disable_token_counters', 'extra_options', 'extra_options_accordion', 'add_model_hash_to_info', 'add_model_name_to_info', 'add_version_to_infotext', 'disable_weights_auto_swap', 'infotext_styles', 'show_progressbar', 'live_previews_enable', 'live_previews_image_format', 'show_progress_grid', 'show_progress_every_n_steps', 'show_progress_type', 'live_preview_content', 'live_preview_refresh_period', 'hide_samplers', 'eta_ddim', 'eta_ancestral', 'ddim_discretize', 's_churn', 's_tmin', 's_noise', 'k_sched_type', 'sigma_min', 'sigma_max', 'rho', 'eta_noise_seed_delta', 'always_discard_next_to_last_sigma', 'uni_pc_variant', 'uni_pc_skip_type', 'uni_pc_order', 'uni_pc_lower_order_final', 'postprocessing_enable_in_main_ui', 'postprocessing_operation_order', 'upscaling_max_images_in_cache', 'disabled_extensions', 'disable_all_extensions', 'restore_config_state_file', 'sd_checkpoint_hash', 'canvas_hotkey_zoom', 'canvas_hotkey_adjust', 'canvas_hotkey_move', 'canvas_hotkey_fullscreen', 'canvas_hotkey_reset', 'canvas_hotkey_overlap', 'canvas_show_tooltip', 'canvas_disabled_functions']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "UI tab order",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Hidden UI tabs",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: []"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: []"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "txt2img/img2img UI item order",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: ['inpaint', 'sampler', 'checkboxes', 'hires_fix', 'dimensions', 'cfg', 'seed', 'batch', 'override_settings', 'extra_options', 'scripts']"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: ['inpaint', 'sampler', 'checkboxes', 'hires_fix', 'dimensions', 'cfg', 'seed', 'batch', 'override_settings', 'extra_options', 'scripts']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Hires fix: show hires sampler selection",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Hires fix: show hires prompt and negative prompt",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Disable prompt token counters",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Options in main UI",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: ['samples_save', 'samples_format', 'samples_filename_pattern', 'save_images_add_number', 'grid_save', 'grid_format', 'grid_extended_filename', 'grid_only_if_multiple', 'grid_prevent_empty_spots', 'grid_zip_filename_pattern', 'n_rows', 'enable_pnginfo', 'save_txt', 'save_images_before_face_restoration', 'save_images_before_highres_fix', 'save_images_before_color_correction', 'save_mask', 'save_mask_composite', 'jpeg_quality', 'webp_lossless', 'export_for_4chan', 'img_downscale_threshold', 'target_side_length', 'img_max_size_mp', 'use_original_name_batch', 'use_upscaler_name_as_suffix', 'save_selected_only', 'save_init_img', 'temp_dir', 'clean_temp_dir_at_start', 'outdir_samples', 'outdir_txt2img_samples', 'outdir_img2img_samples', 'outdir_extras_samples', 'outdir_grids', 'outdir_txt2img_grids', 'outdir_img2img_grids', 'outdir_save', 'outdir_init_images', 'save_to_dirs', 'grid_save_to_dirs', 'use_save_to_dirs_for_ui', 'directories_filename_pattern', 'directories_max_prompt_words', 'ESRGAN_tile', 'ESRGAN_tile_overlap', 'realesrgan_enabled_models', 'upscaler_for_img2img', 'ldsr_steps', 'ldsr_cached', 'SCUNET_tile', 'SCUNET_tile_overlap', 'SWIN_tile', 'SWIN_tile_overlap', 'face_restoration_model', 'code_former_weight', 'face_restoration_unload', 'show_warnings', 'memmon_poll_rate', 'samples_log_stdout', 'multiple_tqdm', 'print_hypernet_extra', 'list_hidden_files', 'unload_models_when_training', 'pin_memory', 'save_optimizer_state', 'save_training_settings_to_txt', 'dataset_filename_word_regex', 'dataset_filename_join_string', 'training_image_repeats_per_epoch', 'training_write_csv_every', 'training_xattention_optimizations', 'training_enable_tensorboard', 'training_tensorboard_save_images', 'training_tensorboard_flush_every', 'sd_model_checkpoint', 'sd_checkpoint_cache', 'sd_vae_checkpoint_cache', 'sd_vae', 'sd_vae_as_default', 'sd_unet', 'inpainting_mask_weight', 'initial_noise_multiplier', 'img2img_color_correction', 'img2img_fix_steps', 'img2img_background_color', 'enable_quantization', 'enable_emphasis', 'enable_batch_seeds', 'comma_padding_backtrack', 'CLIP_stop_at_last_layers', 'upcast_attn', 'randn_source', 'cross_attention_optimization', 's_min_uncond', 'token_merging_ratio', 'token_merging_ratio_img2img', 'token_merging_ratio_hr', 'pad_cond_uncond', 'experimental_persistent_cond_cache', 'use_old_emphasis_implementation', 'use_old_karras_scheduler_sigmas', 'no_dpmpp_sde_batch_determinism', 'use_old_hires_fix_width_height', 'dont_fix_second_order_samplers_schedule', 'hires_fix_use_firstpass_conds', 'lora_functional', 'interrogate_keep_models_in_memory', 'interrogate_return_ranks', 'interrogate_clip_num_beams', 'interrogate_clip_min_length', 'interrogate_clip_max_length', 'interrogate_clip_dict_limit', 'interrogate_clip_skip_categories', 'interrogate_deepbooru_score_threshold', 'deepbooru_sort_alpha', 'deepbooru_use_spaces', 'deepbooru_escape', 'deepbooru_filter_tags', 'extra_networks_show_hidden_directories', 'extra_networks_hidden_models', 'extra_networks_default_view', 'extra_networks_default_multiplier', 'extra_networks_card_width', 'extra_networks_card_height', 'extra_networks_add_text_separator', 'ui_extra_networks_tab_reorder', 'sd_hypernetwork', 'sd_lora', 'lora_preferred_name', 'lora_add_hashes_to_infotext', 'localization', 'gradio_theme', 'img2img_editor_height', 'return_grid', 'return_mask', 'return_mask_composite', 'do_not_show_images', 'send_seed', 'send_size', 'font', 'js_modal_lightbox', 'js_modal_lightbox_initially_zoomed', 'js_modal_lightbox_gamepad', 'js_modal_lightbox_gamepad_repeat', 'show_progress_in_title', 'samplers_in_dropdown', 'dimensions_and_batch_together', 'keyedit_precision_attention', 'keyedit_precision_extra', 'keyedit_delimiters', 'quicksettings_list', 'ui_tab_order', 'hidden_tabs', 'ui_reorder_list', 'hires_fix_show_sampler', 'hires_fix_show_prompts', 'disable_token_counters', 'extra_options', 'extra_options_accordion', 'add_model_hash_to_info', 'add_model_name_to_info', 'add_version_to_infotext', 'disable_weights_auto_swap', 'infotext_styles', 'show_progressbar', 'live_previews_enable', 'live_previews_image_format', 'show_progress_grid', 'show_progress_every_n_steps', 'show_progress_type', 'live_preview_content', 'live_preview_refresh_period', 'hide_samplers', 'eta_ddim', 'eta_ancestral', 'ddim_discretize', 's_churn', 's_tmin', 's_noise', 'k_sched_type', 'sigma_min', 'sigma_max', 'rho', 'eta_noise_seed_delta', 'always_discard_next_to_last_sigma', 'uni_pc_variant', 'uni_pc_skip_type', 'uni_pc_order', 'uni_pc_lower_order_final', 'postprocessing_enable_in_main_ui', 'postprocessing_operation_order', 'upscaling_max_images_in_cache', 'disabled_extensions', 'disable_all_extensions', 'restore_config_state_file', 'sd_checkpoint_hash', 'canvas_hotkey_zoom', 'canvas_hotkey_adjust', 'canvas_hotkey_move', 'canvas_hotkey_fullscreen', 'canvas_hotkey_reset', 'canvas_hotkey_overlap', 'canvas_show_tooltip', 'canvas_disabled_functions']"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: ['samples_save', 'samples_format', 'samples_filename_pattern', 'save_images_add_number', 'grid_save', 'grid_format', 'grid_extended_filename', 'grid_only_if_multiple', 'grid_prevent_empty_spots', 'grid_zip_filename_pattern', 'n_rows', 'enable_pnginfo', 'save_txt', 'save_images_before_face_restoration', 'save_images_before_highres_fix', 'save_images_before_color_correction', 'save_mask', 'save_mask_composite', 'jpeg_quality', 'webp_lossless', 'export_for_4chan', 'img_downscale_threshold', 'target_side_length', 'img_max_size_mp', 'use_original_name_batch', 'use_upscaler_name_as_suffix', 'save_selected_only', 'save_init_img', 'temp_dir', 'clean_temp_dir_at_start', 'outdir_samples', 'outdir_txt2img_samples', 'outdir_img2img_samples', 'outdir_extras_samples', 'outdir_grids', 'outdir_txt2img_grids', 'outdir_img2img_grids', 'outdir_save', 'outdir_init_images', 'save_to_dirs', 'grid_save_to_dirs', 'use_save_to_dirs_for_ui', 'directories_filename_pattern', 'directories_max_prompt_words', 'ESRGAN_tile', 'ESRGAN_tile_overlap', 'realesrgan_enabled_models', 'upscaler_for_img2img', 'ldsr_steps', 'ldsr_cached', 'SCUNET_tile', 'SCUNET_tile_overlap', 'SWIN_tile', 'SWIN_tile_overlap', 'face_restoration_model', 'code_former_weight', 'face_restoration_unload', 'show_warnings', 'memmon_poll_rate', 'samples_log_stdout', 'multiple_tqdm', 'print_hypernet_extra', 'list_hidden_files', 'unload_models_when_training', 'pin_memory', 'save_optimizer_state', 'save_training_settings_to_txt', 'dataset_filename_word_regex', 'dataset_filename_join_string', 'training_image_repeats_per_epoch', 'training_write_csv_every', 'training_xattention_optimizations', 'training_enable_tensorboard', 'training_tensorboard_save_images', 'training_tensorboard_flush_every', 'sd_model_checkpoint', 'sd_checkpoint_cache', 'sd_vae_checkpoint_cache', 'sd_vae', 'sd_vae_as_default', 'sd_unet', 'inpainting_mask_weight', 'initial_noise_multiplier', 'img2img_color_correction', 'img2img_fix_steps', 'img2img_background_color', 'enable_quantization', 'enable_emphasis', 'enable_batch_seeds', 'comma_padding_backtrack', 'CLIP_stop_at_last_layers', 'upcast_attn', 'randn_source', 'cross_attention_optimization', 's_min_uncond', 'token_merging_ratio', 'token_merging_ratio_img2img', 'token_merging_ratio_hr', 'pad_cond_uncond', 'experimental_persistent_cond_cache', 'use_old_emphasis_implementation', 'use_old_karras_scheduler_sigmas', 'no_dpmpp_sde_batch_determinism', 'use_old_hires_fix_width_height', 'dont_fix_second_order_samplers_schedule', 'hires_fix_use_firstpass_conds', 'lora_functional', 'interrogate_keep_models_in_memory', 'interrogate_return_ranks', 'interrogate_clip_num_beams', 'interrogate_clip_min_length', 'interrogate_clip_max_length', 'interrogate_clip_dict_limit', 'interrogate_clip_skip_categories', 'interrogate_deepbooru_score_threshold', 'deepbooru_sort_alpha', 'deepbooru_use_spaces', 'deepbooru_escape', 'deepbooru_filter_tags', 'extra_networks_show_hidden_directories', 'extra_networks_hidden_models', 'extra_networks_default_view', 'extra_networks_default_multiplier', 'extra_networks_card_width', 'extra_networks_card_height', 'extra_networks_add_text_separator', 'ui_extra_networks_tab_reorder', 'sd_hypernetwork', 'sd_lora', 'lora_preferred_name', 'lora_add_hashes_to_infotext', 'localization', 'gradio_theme', 'img2img_editor_height', 'return_grid', 'return_mask', 'return_mask_composite', 'do_not_show_images', 'send_seed', 'send_size', 'font', 'js_modal_lightbox', 'js_modal_lightbox_initially_zoomed', 'js_modal_lightbox_gamepad', 'js_modal_lightbox_gamepad_repeat', 'show_progress_in_title', 'samplers_in_dropdown', 'dimensions_and_batch_together', 'keyedit_precision_attention', 'keyedit_precision_extra', 'keyedit_delimiters', 'quicksettings_list', 'ui_tab_order', 'hidden_tabs', 'ui_reorder_list', 'hires_fix_show_sampler', 'hires_fix_show_prompts', 'disable_token_counters', 'extra_options', 'extra_options_accordion', 'add_model_hash_to_info', 'add_model_name_to_info', 'add_version_to_infotext', 'disable_weights_auto_swap', 'infotext_styles', 'show_progressbar', 'live_previews_enable', 'live_previews_image_format', 'show_progress_grid', 'show_progress_every_n_steps', 'show_progress_type', 'live_preview_content', 'live_preview_refresh_period', 'hide_samplers', 'eta_ddim', 'eta_ancestral', 'ddim_discretize', 's_churn', 's_tmin', 's_noise', 'k_sched_type', 'sigma_min', 'sigma_max', 'rho', 'eta_noise_seed_delta', 'always_discard_next_to_last_sigma', 'uni_pc_variant', 'uni_pc_skip_type', 'uni_pc_order', 'uni_pc_lower_order_final', 'postprocessing_enable_in_main_ui', 'postprocessing_operation_order', 'upscaling_max_images_in_cache', 'disabled_extensions', 'disable_all_extensions', 'restore_config_state_file', 'sd_checkpoint_hash', 'canvas_hotkey_zoom', 'canvas_hotkey_adjust', 'canvas_hotkey_move', 'canvas_hotkey_fullscreen', 'canvas_hotkey_reset', 'canvas_hotkey_overlap', 'canvas_show_tooltip', 'canvas_disabled_functions']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Place options in main UI into an accordion",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Add model hash to generation information",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Add model name to generation information",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Add program version to generation information",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Disregard checkpoint information from pasted infotext",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Infer styles from prompts of pasted infotext",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Show progressbar",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Show live previews of the created image",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Live preview file format",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Show previews of all images generated in a batch as a grid",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Live preview display period",
                    "type": {
                        "type": "number",
                        "description": "numeric value between -1 and 32"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between -1 and 32"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Live preview method",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Live preview subject",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Progressbar and preview update period",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Hide samplers in user interface",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "serializer": "ListStringSerializable"
                },
                {
                    "label": "Eta for DDIM",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Eta for ancestral samplers",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "img2img DDIM discretize",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "sigma churn",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "sigma tmin",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "sigma noise",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "scheduler type",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['Automatic', 'karras', 'exponential', 'polyexponential']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['Automatic', 'karras', 'exponential', 'polyexponential']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "sigma min",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "sigma max",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "rho",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Eta noise seed delta",
                    "type": {
                        "type": "number"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": ""
                    },
                    "component": "Number",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Always discard next-to-last sigma",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "UniPC variant",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "UniPC skip type",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "UniPC order",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 1 and 50"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 1 and 50"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "UniPC lower order final",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Enable postprocessing operations in txt2img and img2img tabs",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: ['CodeFormer', 'GFPGAN', 'Upscale']"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: ['CodeFormer', 'GFPGAN', 'Upscale']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Postprocessing operation order",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options from: ['CodeFormer', 'GFPGAN', 'Upscale']"
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": "List of options from: ['CodeFormer', 'GFPGAN', 'Upscale']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Maximum number of images in upscaling cache",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 10"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 10"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Zoom canvas",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Adjust brush size",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Moving the canvas",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Fullscreen Mode, maximizes the picture so that it fits into the screen and stretches it to its full width ",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Reset zoom and canvas positon",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Toggle overlap",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Enable tooltip on the canvas",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Disable function that you don't use",
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "python_type": {
                        "type": "List[str]",
                        "description": ""
                    },
                    "component": "Checkboxgroup",
                    "serializer": "ListStringSerializable"
                }
            ]
        },
        "249": {
            "parameters": [],
            "returns": [
                {
                    "label": "Image CFG Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 3.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 3.0"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                }
            ]
        },
        "250": {
            "parameters": [],
            "returns": [
                {
                    "label": "Image CFG Scale",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0 and 3.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0 and 3.0"
                    },
                    "component": "Slider",
                    "serializer": "NumberSerializable"
                }
            ]
        },
        "251": {
            "parameters": [],
            "returns": [
                {
                    "label": "value_622",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "252": {
            "parameters": [
                {
                    "label": "parameter_34",
                    "type": {
                        "type": {},
                        "description": "any valid json"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "filepath to JSON file"
                    },
                    "component": "Label",
                    "example_input": null,
                    "serializer": "JSONSerializable"
                },
                {
                    "label": "Primary model (A)",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "example_input": "v1-5-pruned-emaonly.safetensors [6ce0161689]",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Secondary model (B)",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "example_input": "v1-5-pruned-emaonly.safetensors [6ce0161689]",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Tertiary model (C)",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "example_input": "v1-5-pruned-emaonly.safetensors [6ce0161689]",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Interpolation Method",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "No interpolation",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Multiplier (M) - set to 0 to get model A",
                    "type": {
                        "type": "number",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "python_type": {
                        "type": "int | float",
                        "description": "numeric value between 0.0 and 1.0"
                    },
                    "component": "Slider",
                    "example_input": 0.0,
                    "serializer": "NumberSerializable"
                },
                {
                    "label": "Save as float16",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                },
                {
                    "label": "Custom Name (Optional)",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Checkpoint format",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "ckpt",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Copy config from",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Radio",
                    "example_input": "A, B or C",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Bake in VAE",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['None']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['None']"
                    },
                    "component": "Dropdown",
                    "example_input": "None",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Discard weights with matching name",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "example_input": "Howdy!",
                    "serializer": "StringSerializable"
                },
                {
                    "label": "Save metadata (.safetensors only)",
                    "type": {
                        "type": "boolean"
                    },
                    "python_type": {
                        "type": "bool",
                        "description": ""
                    },
                    "component": "Checkbox",
                    "example_input": true,
                    "serializer": "BooleanSerializable"
                }
            ],
            "returns": [
                {
                    "label": "Primary model (A)",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Secondary model (B)",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Tertiary model (C)",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "Stable Diffusion checkpoint",
                    "type": {
                        "type": "string",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "python_type": {
                        "type": "str",
                        "description": "Option from: ['v1-5-pruned-emaonly.safetensors [6ce0161689]']"
                    },
                    "component": "Dropdown",
                    "serializer": "SimpleSerializable"
                },
                {
                    "label": "value_622",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Html",
                    "serializer": "StringSerializable"
                }
            ]
        },
        "253": {
            "parameters": [],
            "returns": [
                {
                    "label": "value_1057",
                    "type": {
                        "type": "string"
                    },
                    "python_type": {
                        "type": "str",
                        "description": ""
                    },
                    "component": "Textbox",
                    "serializer": "StringSerializable"
                }
            ]
        }
    }
}